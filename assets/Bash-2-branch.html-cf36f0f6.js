import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e}from"./app-8da2a3ac.js";const t={},p=e(`<h2 id="if-分支" tabindex="-1"><a class="header-anchor" href="#if-分支" aria-hidden="true">#</a> if 分支</h2><p>if 分支是 shell 中的最常见的分支</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>                           <span class="token comment"># expression 返回值为 0 表示条件成立</span>
    commands                                     <span class="token comment"># 表达式成立才会执行 command</span>
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">3</span> <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                             <span class="token comment">#  3 &gt; 2 条件成立</span>
    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot; 3 bigger thean 2<span class="token entity" title="\\n">\\n</span>&quot;</span>                <span class="token comment"># 执行打印</span>
<span class="token keyword">fi</span>

 $ <span class="token keyword">if</span> <span class="token function">date</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">;</span> <span class="token keyword">fi</span>                 <span class="token comment"># 命令执行成功也表示条件成立</span>
 <span class="token operator">&gt;</span> Mon Aug <span class="token number">15</span> <span class="token number">21</span>:03:03 CST <span class="token number">2022</span>                  <span class="token comment"># date 命令执行成功</span>
 <span class="token operator">&gt;</span> <span class="token boolean">true</span>                                          <span class="token comment"># 执行分支代码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注: if 分支后的命令或表达式返回 0 表示 true, 条件成立, 其余值均表示 false 不成立</p><h3 id="多重分支" tabindex="-1"><a class="header-anchor" href="#多重分支" aria-hidden="true">#</a> 多重分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                            <span class="token comment"># command 返回值为 0 表示条件成立</span>
    commands
<span class="token keyword">elif</span> <span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                          <span class="token comment"># if 不成立, 判断 elif        </span>
    commands
<span class="token keyword">else</span>                                             <span class="token comment"># if 和 elif 均不成立才执行</span>
    commands
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                                    <span class="token comment"># 命令执行成功表示条件成立</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;first if&quot;</span><span class="token punctuation">;</span> 
<span class="token keyword">elif</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                                  <span class="token comment"># 上个 if 条件不成立才会执行判断</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;else if&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>                                             <span class="token comment"># 上述分支均不成立才会执行</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;else&quot;</span><span class="token punctuation">;</span> 
<span class="token keyword">fi</span>       

<span class="token operator">&gt;</span> first <span class="token keyword">if</span>                                       <span class="token comment"># 执行第一个成立的 if 条件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式" aria-hidden="true">#</a> 表达式</h3><p>表达式有很多形式, 数值或字符串比较需要使用括号包含<br> Linux 命令也可以作为表达式, 命令返回值 0 为 true, 返回值不为 0 为 false</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">test</span> <span class="token operator">&lt;</span> expression <span class="token operator">&gt;</span>                              <span class="token comment"># 常用作 if 判断的表达式, 与 [ expression ] 等价</span>
<span class="token punctuation">[</span> expression <span class="token punctuation">]</span>                                   <span class="token comment"># 同上, 与 test 等价, 括号内空格是必须的</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> expression <span class="token punctuation">]</span><span class="token punctuation">]</span>                                 <span class="token comment"># 较上述额外支持正则, 括号内空格是必须的</span>


<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$USER</span> <span class="token operator">==</span> <span class="token string">&quot;root&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>                   
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;user is root&quot;</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;not user root&quot;</span>
<span class="token keyword">fi</span>

 $ <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$USER</span> <span class="token operator">==</span> <span class="token string">&quot;root&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;user is root&quot;</span>  <span class="token comment"># &amp;&amp;(且) 表达式为 true 才会执行后半段</span>
 $ <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$USER</span> <span class="token operator">==</span> <span class="token string">&quot;root&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;not user root&quot;</span> <span class="token comment"># ||(或) 表达式为 false 才会执行后半段</span>

 $ <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token variable">$?</span>                               <span class="token comment"># true 返回值为 0, 前半部分 true, 继续执行后半段    </span>
 <span class="token operator">&gt;</span> <span class="token number">0</span>
 $ <span class="token boolean">false</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token variable">$?</span>                              <span class="token comment"># false 返回值 1, 前半部分 false, 继续执行后半段</span>
 <span class="token operator">&gt;</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注: 单括号需要注意变量引用为空导致命令报错或逻辑错误<br><code>[ $name == &quot;bash&quot; ]</code> 当 <code>$name</code> 为空执行会报错</p><h3 id="数值比较" tabindex="-1"><a class="header-anchor" href="#数值比较" aria-hidden="true">#</a> 数值比较</h3><p>单中括号数值比较不支持 <code>&gt; &lt; ==</code> 等符号, 使用 <code>-eq -ne -lt -le -gt -ge</code> 代替<br> 双中括号数值比较支持 <code>&gt; &lt; ==</code> 符号也支持 <code>-eq -ne -lt -le -gt -ge</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token punctuation">[</span> <span class="token number">3</span> <span class="token parameter variable">-eq</span> <span class="token number">3</span> <span class="token punctuation">]</span>                                   <span class="token comment"># equal 数值相等表示 true</span>
 $ <span class="token punctuation">[</span> <span class="token number">3</span> <span class="token parameter variable">-ne</span> <span class="token number">3</span> <span class="token punctuation">]</span>                                   <span class="token comment"># not equal 数值不相等表示 true</span>
 $ <span class="token punctuation">[</span> <span class="token number">3</span> <span class="token parameter variable">-lt</span> <span class="token number">3</span> <span class="token punctuation">]</span>                                   <span class="token comment"># less than 小于</span>
 $ <span class="token punctuation">[</span> <span class="token number">3</span> <span class="token parameter variable">-le</span> <span class="token number">3</span> <span class="token punctuation">]</span>                                   <span class="token comment"># less equal 小于等于 </span>
 $ <span class="token punctuation">[</span> <span class="token number">3</span> <span class="token parameter variable">-gt</span> <span class="token number">3</span> <span class="token punctuation">]</span>                                   <span class="token comment"># greater than 大于</span>
 $ <span class="token punctuation">[</span> <span class="token number">3</span> <span class="token parameter variable">-ge</span> <span class="token number">3</span> <span class="token punctuation">]</span>                                   <span class="token comment"># greater equal 大于等于</span>

 $ <span class="token punctuation">[</span> <span class="token number">0</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token variable">$?</span>
 <span class="token operator">&gt;</span> <span class="token number">0</span>
 
 $ <span class="token punctuation">[</span> <span class="token number">3</span> <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;true&quot;</span>                      <span class="token comment"># 执行命令 &quot;3&quot; 结果写入 2 文件, 执行成功打印 true</span>
 <span class="token operator">&gt;</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注: 数值比较尽量不要使用 <code>&gt;</code> <code>&lt;</code> <code>==</code>等符号, 使用双中括号和字符比较</p><h3 id="字符串比较" tabindex="-1"><a class="header-anchor" href="#字符串比较" aria-hidden="true">#</a> 字符串比较</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;str&quot;</span> <span class="token punctuation">]</span>                                  <span class="token comment"># 字符串长度为 0 为 true</span>
 $ <span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;str&quot;</span> <span class="token punctuation">]</span>                                  <span class="token comment"># 字符串长度不为 0 为 true</span>

 $ <span class="token punctuation">[</span> <span class="token string">&quot;abc&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;abc&quot;</span> <span class="token punctuation">]</span>                            <span class="token comment"># 字符串相等为 true</span>
 $ <span class="token punctuation">[</span> <span class="token string">&quot;abc&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;abc&quot;</span> <span class="token punctuation">]</span>                            <span class="token comment"># 字符串不相等为 true</span>
 
 $ <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
 $ <span class="token punctuation">[</span> <span class="token variable">$name</span> <span class="token operator">==</span> <span class="token string">&quot;linux&quot;</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;no linux&quot;</span>       <span class="token comment"># name 为空, 从 == 开始执行, 报错</span>
 <span class="token operator">&gt;</span> bash: <span class="token punctuation">[</span>: <span class="token operator">==</span>: unary operator expected

 $ <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string">&quot;linux&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;no linux&quot;</span>
 <span class="token operator">&gt;</span> no linux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件比较" tabindex="-1"><a class="header-anchor" href="#文件比较" aria-hidden="true">#</a> 文件比较</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> <span class="token function">file</span> <span class="token punctuation">]</span>                                   <span class="token comment"># 文件存在为 true</span>
 $ <span class="token punctuation">[</span> <span class="token parameter variable">-d</span> <span class="token function">file</span> <span class="token punctuation">]</span>                                   <span class="token comment"># 路径存在为 true</span>

 $ <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-e</span> <span class="token function">file</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">touch</span> <span class="token function">file</span>                 <span class="token comment"># 如果 file 不存在则创建 file</span>
 $ <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> /root/path <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /root/path  <span class="token comment"># 如果路径不存在测创建路径</span>
 
 $ <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token function">file</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> <span class="token function">file</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;1st&quot;</span> <span class="token operator">&gt;</span> <span class="token function">file</span>  <span class="token comment"># file 存在则读取 file, 不存在则创建并写入 &quot;1st&quot;</span>
 <span class="token operator">&gt;</span> 1st
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="正则判断" tabindex="-1"><a class="header-anchor" href="#正则判断" aria-hidden="true">#</a> 正则判断</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token punctuation">[</span> expression <span class="token punctuation">]</span><span class="token punctuation">]</span>                                 <span class="token comment"># 仅双括号支持正则表达式</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;abc&quot;</span> <span class="token operator">=~</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>                               <span class="token comment"># true 判断 abc 是否包含 b </span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;01:01:01&quot;</span> <span class="token operator">=~</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span>-9<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">\\</span>:<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token number">0</span>-9<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>      <span class="token comment"># true 正则匹配时间格式, 正则表达式不能用引号包含</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;10.0.0.1&quot;</span> <span class="token operator">=~</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span>-9<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1,3</span><span class="token punctuation">}</span><span class="token punctuation">\\</span>.<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token number">0</span>-9<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1,3</span><span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># true 正则匹配 IPV4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="逻辑判断" tabindex="-1"><a class="header-anchor" href="#逻辑判断" aria-hidden="true">#</a> 逻辑判断</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span> <span class="token operator">!</span> expression <span class="token punctuation">]</span>                              <span class="token comment"># 单括号逻辑非</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">!</span> expression <span class="token punctuation">]</span><span class="token punctuation">]</span>                            <span class="token comment"># 双括号逻辑非</span>

<span class="token punctuation">[</span> <span class="token boolean">true</span> <span class="token parameter variable">-a</span> <span class="token boolean">true</span> <span class="token punctuation">]</span>                              <span class="token comment"># true 单括号逻辑与</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">false</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>                           <span class="token comment"># false 双括号逻辑与</span>

<span class="token punctuation">[</span> <span class="token boolean">false</span> <span class="token parameter variable">-o</span> <span class="token boolean">true</span> <span class="token punctuation">]</span>                             <span class="token comment"># true 单括号逻辑或</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token boolean">false</span> <span class="token operator">||</span> <span class="token boolean">true</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>                           <span class="token comment"># true 双括号逻辑或</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="逻辑运算" tabindex="-1"><a class="header-anchor" href="#逻辑运算" aria-hidden="true">#</a> 逻辑运算</h3><h4 id="逻辑与" tabindex="-1"><a class="header-anchor" href="#逻辑与" aria-hidden="true">#</a> 逻辑与</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token builtin class-name">command</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">command</span>                            <span class="token comment"># 前一条命令成功才会执行后一条</span>

 $ <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;true&quot;</span>                           <span class="token comment"># true 返回值 0, 继续执行</span>
 <span class="token operator">&gt;</span> <span class="token boolean">true</span>

<span class="token operator">!</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;not false&quot;</span>                   <span class="token comment"># 前一条命令返回值 0, 继续执行</span>
 <span class="token operator">&gt;</span> not <span class="token boolean">false</span>

 $ <span class="token builtin class-name">command</span> <span class="token operator">||</span> <span class="token builtin class-name">command</span>                            <span class="token comment"># 前一条失败后才会继续执行后一条</span>

 $ <span class="token boolean">false</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;false&quot;</span>                         <span class="token comment"># false 返回值 1, 执行下一条</span>
 <span class="token operator">&gt;</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> switch</h2>`,26),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","Bash-2-branch.html.vue"]]);export{k as default};
