const e=JSON.parse('{"key":"v-dcc6a008","path":"/Go/modules/go-gin.html","title":"Gin","lang":"en-US","frontmatter":{"title":"Gin","description":"Gin官网 Gin 是一个用 Go (Golang) 编写的 HTTP Web 框架 安装 使用 go get -u 下载最新的 gin 包, 同时把依赖信息写入 go.mod $ go env -w GOPROXY=https://goproxy.cn,direct # 设置 go 下载源为国内源 $ go get -u github.com/gin-gonic/gin # -u 强制使用网络下载安装 Gin 依赖包 $ go list -m all | grep gin &gt; github.com/gin-gonic/gin v1.9.1","date":"2023-07-12T09:29:19.000Z","toc":true,"category":["Go 教程"],"tag":["Go"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/Go/modules/go-gin.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"Gin"}],["meta",{"property":"og:description","content":"Gin官网 Gin 是一个用 Go (Golang) 编写的 HTTP Web 框架 安装 使用 go get -u 下载最新的 gin 包, 同时把依赖信息写入 go.mod $ go env -w GOPROXY=https://goproxy.cn,direct # 设置 go 下载源为国内源 $ go get -u github.com/gin-gonic/gin # -u 强制使用网络下载安装 Gin 依赖包 $ go list -m all | grep gin &gt; github.com/gin-gonic/gin v1.9.1"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2023-07-12T09:29:19.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Gin\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-12T09:29:19.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"路由参数","slug":"路由参数","link":"#路由参数","children":[]},{"level":2,"title":"Query 参数","slug":"query-参数","link":"#query-参数","children":[]},{"level":2,"title":"Form 参数","slug":"form-参数","link":"#form-参数","children":[{"level":3,"title":"JSON 参数","slug":"json-参数","link":"#json-参数","children":[]},{"level":3,"title":"参数绑定","slug":"参数绑定","link":"#参数绑定","children":[]},{"level":3,"title":"文件上传","slug":"文件上传","link":"#文件上传","children":[]}]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":3.7,"words":1111},"filePathRelative":"Go/modules/go-gin.md","localizedDate":"July 12, 2023","excerpt":"<p><a href=\\"https://gin-gonic.com/zh-cn/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Gin官网</a></p>\\n<p>Gin 是一个用 Go (Golang) 编写的 HTTP Web 框架</p>\\n<h2> 安装</h2>\\n<p>使用 <code>go get -u</code> 下载最新的 gin 包, 同时把依赖信息写入 go.mod</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code> $ go <span class=\\"token function\\">env</span> <span class=\\"token parameter variable\\">-w</span> <span class=\\"token assign-left variable\\">GOPROXY</span><span class=\\"token operator\\">=</span>https://goproxy.cn,direct             <span class=\\"token comment\\"># 设置 go 下载源为国内源</span>\\n $ go get <span class=\\"token parameter variable\\">-u</span> github.com/gin-gonic/gin                      <span class=\\"token comment\\"># -u 强制使用网络下载安装 Gin 依赖包</span>\\n \\n $ go list <span class=\\"token parameter variable\\">-m</span> all <span class=\\"token operator\\">|</span> <span class=\\"token function\\">grep</span> gin\\n <span class=\\"token operator\\">&gt;</span> github.com/gin-gonic/gin v1.9.1\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
