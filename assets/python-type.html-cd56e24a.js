const e=JSON.parse('{"key":"v-0f455070","path":"/Python/python-type.html","title":"Python 类型注解","lang":"en-US","frontmatter":{"title":"Python 类型注解","description":"引申 动态语言与静态语言 动态语言(弱类型语言) 静态语言(强类型语言) 动态语言的变量没有类型, 变量的类型由值的类型决定 name = \\"facser\\" # python 是动态语言 name = 18 # 变量无需声明类型, 可接受任意类型的值 name = [1,2,3] # 变量可随意变换类型, 类型仅在执行时确定","date":"2022-09-20T16:03:37.000Z","category":["Python 技巧"],"tag":["Python"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/Python/python-type.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"Python 类型注解"}],["meta",{"property":"og:description","content":"引申 动态语言与静态语言 动态语言(弱类型语言) 静态语言(强类型语言) 动态语言的变量没有类型, 变量的类型由值的类型决定 name = \\"facser\\" # python 是动态语言 name = 18 # 变量无需声明类型, 可接受任意类型的值 name = [1,2,3] # 变量可随意变换类型, 类型仅在执行时确定"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2022-09-20T16:03:37.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 类型注解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-20T16:03:37.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"引申","slug":"引申","link":"#引申","children":[{"level":3,"title":"动态语言与静态语言","slug":"动态语言与静态语言","link":"#动态语言与静态语言","children":[]},{"level":3,"title":"python 类型注解","slug":"python-类型注解","link":"#python-类型注解","children":[]}]},{"level":2,"title":"变量注解","slug":"变量注解","link":"#变量注解","children":[{"level":3,"title":"容器类型","slug":"容器类型","link":"#容器类型","children":[]},{"level":3,"title":"联合类型","slug":"联合类型","link":"#联合类型","children":[]},{"level":3,"title":"抽象类型","slug":"抽象类型","link":"#抽象类型","children":[]},{"level":3,"title":"函数注解","slug":"函数注解","link":"#函数注解","children":[]},{"level":3,"title":"Callable","slug":"callable","link":"#callable","children":[]},{"level":3,"title":"泛型","slug":"泛型","link":"#泛型","children":[]},{"level":3,"title":"自定义类型","slug":"自定义类型","link":"#自定义类型","children":[]},{"level":3,"title":"类型别名","slug":"类型别名","link":"#类型别名","children":[]},{"level":3,"title":"class","slug":"class","link":"#class","children":[]}]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":3.85,"words":1155},"filePathRelative":"Python/python-type.md","localizedDate":"September 20, 2022","excerpt":"<h2> 引申</h2>\\n<h3> 动态语言与静态语言</h3>\\n<ul>\\n<li>动态语言(弱类型语言)</li>\\n<li>静态语言(强类型语言)</li>\\n</ul>\\n<p>动态语言的变量没有类型, 变量的类型由值的类型决定</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"facser\\"</span>                                 <span class=\\"token comment\\"># python 是动态语言</span>\\n name <span class=\\"token operator\\">=</span> <span class=\\"token number\\">18</span>                                       <span class=\\"token comment\\"># 变量无需声明类型, 可接受任意类型的值</span>\\n name <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span>                                  <span class=\\"token comment\\"># 变量可随意变换类型, 类型仅在执行时确定</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
