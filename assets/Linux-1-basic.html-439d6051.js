import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as l,a as n,b as o,e as p,f as c}from"./app-8da2a3ac.js";const i={},r={href:"https://www.linuxcool.com/",target:"_blank",rel:"noopener noreferrer"},d=c(`<h2 id="帮助信息" tabindex="-1"><a class="header-anchor" href="#帮助信息" aria-hidden="true">#</a> 帮助信息</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">man</span> <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>                                 <span class="token comment"># man (manual) 帮助手册, 查看命令的帮助手册</span>
 $ <span class="token function">man</span> <span class="token parameter variable">-f</span> <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>                              <span class="token comment"># 显示命令的简短描述</span>
 $ <span class="token function">man</span> <span class="token parameter variable">-f</span> <span class="token function">date</span>
 <span class="token operator">&gt;</span> <span class="token function">date</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>             - print or <span class="token builtin class-name">set</span> the system <span class="token function">date</span> and <span class="token function">time</span>

 $ whatis <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>                              <span class="token comment"># 显示命令的简短描述, 等同于 man -f &lt;command&gt;</span>
 $ whatis <span class="token function">date</span>
 <span class="token operator">&gt;</span> <span class="token function">date</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>             - print or <span class="token builtin class-name">set</span> the system <span class="token function">date</span> and <span class="token function">time</span>

 $ <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> -h/--help                           <span class="token comment"># 命令使用 -h/--help 参数</span>
 $ <span class="token function">date</span> <span class="token parameter variable">-h</span>
 $ <span class="token function">date</span> <span class="token parameter variable">--help</span>
 <span class="token operator">&gt;</span> Usage: <span class="token function">date</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>+FORMAT<span class="token punctuation">]</span>
 <span class="token operator">&gt;</span>   or:  <span class="token function">date</span> <span class="token punctuation">[</span>-u<span class="token operator">|</span>--utc<span class="token operator">|</span>--universal<span class="token punctuation">]</span> <span class="token punctuation">[</span>MMDDhhmm<span class="token punctuation">[</span><span class="token punctuation">[</span>CC<span class="token punctuation">]</span>YY<span class="token punctuation">]</span><span class="token punctuation">[</span>.ss<span class="token punctuation">]</span><span class="token punctuation">]</span>
 <span class="token operator">&gt;</span> Display the current <span class="token function">time</span> <span class="token keyword">in</span> the given FORMAT, or <span class="token builtin class-name">set</span> the system date.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文件与路径" tabindex="-1"><a class="header-anchor" href="#文件与路径" aria-hidden="true">#</a> 文件与路径</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token builtin class-name">pwd</span>                                           <span class="token comment"># 查看当前目录</span>
 <span class="token operator">&gt;</span> /root/Desktop

 $ <span class="token function">ls</span>                                            <span class="token comment"># 查看当前目录下的文件及文件夹</span>
 <span class="token operator">&gt;</span> source.sh  target.tar.gz

 $ <span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>path<span class="token operator">&gt;</span>                                     <span class="token comment"># 切换到 path 目录(无返回值), path 不存在则报错</span>
 ~/Desktop/Zip$                                  <span class="token comment"># 命令行 $ 左边即为当前目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">cp</span> <span class="token operator">&lt;</span>source<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>destination<span class="token operator">&gt;</span>                     <span class="token comment"># 文件复制</span>
 $ <span class="token function">mv</span> <span class="token operator">&lt;</span>source<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>destination<span class="token operator">&gt;</span>                     <span class="token comment"># 文件移动或重命名</span>
 $ <span class="token function">rm</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>                                     <span class="token comment"># 删除文件</span>
 $ <span class="token function">mkdir</span> <span class="token operator">&lt;</span>path<span class="token operator">&gt;</span>                                  <span class="token comment"># 创建文件夹</span>
 $ <span class="token function">touch</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>                                  <span class="token comment"># 创建文件</span>
 $ <span class="token function">cat</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>                                    <span class="token comment"># 查看文件内容</span>

 $ <span class="token function">touch</span> learn.log                               <span class="token comment"># 创建文件 learn.log</span>
 $ <span class="token function">mkdir</span> seeds                                   <span class="token comment"># 创建文件夹 seeds  </span>
 $ <span class="token function">cp</span> learn.log seeds/                           <span class="token comment"># learn.log 复制到 seeds 文件夹下</span>
 $ <span class="token function">rm</span> learn.log                                  <span class="token comment"># 删除当前目录下的 learn.log</span>
 $ <span class="token function">mv</span> seeds/learn.log study.log                  <span class="token comment"># 将 seeds 下的 learn.log 移动到当前目录并重命名</span>
 $ <span class="token function">rm</span> <span class="token parameter variable">-r</span> seeds                                   <span class="token comment"># 删除 seeds 文件夹及文件夹下的所有文件</span>

 <span class="token operator">&gt;</span> <span class="token string">&#39;learn.log&#39;</span>       -<span class="token operator">&gt;</span> create
 <span class="token operator">&gt;</span> <span class="token string">&#39;seed/&#39;</span>           -<span class="token operator">&gt;</span> create
 <span class="token operator">&gt;</span> <span class="token string">&#39;learn.log&#39;</span>       -<span class="token operator">&gt;</span> <span class="token string">&#39;seed/learn.log&#39;</span>
 <span class="token operator">&gt;</span> <span class="token string">&#39;learn.log&#39;</span>       -<span class="token operator">&gt;</span> delete
 <span class="token operator">&gt;</span> <span class="token string">&#39;seeds/learn.log&#39;</span> -<span class="token operator">&gt;</span> <span class="token string">&#39;study.log&#39;</span>
 <span class="token operator">&gt;</span> <span class="token string">&#39;seed/&#39;</span>           -<span class="token operator">&gt;</span> delete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看执行过命令" tabindex="-1"><a class="header-anchor" href="#查看执行过命令" aria-hidden="true">#</a> 查看执行过命令</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">history</span>                                       <span class="token comment"># 查看执行的命令历史</span>
 <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token function">ls</span>
 <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token function">date</span>

 $ <span class="token operator">!</span><span class="token operator">!</span>                                            <span class="token comment"># 执行上一条命令</span>
 $ <span class="token operator">!</span><span class="token operator">&lt;</span>command key<span class="token operator">&gt;</span> + enter                        <span class="token comment"># 通过命令关键字和 enter 执行上一个包含关键字的命令</span>
 
 $ control + r + <span class="token operator">&lt;</span>command key<span class="token operator">&gt;</span>                   <span class="token comment"># 快捷键进入历史列表, 通过关键字查找, enter 执行命令</span>
 <span class="token operator">&gt;</span> <span class="token punctuation">(</span>reverse-i-search<span class="token punctuation">)</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $&#39;: <span class="token builtin class-name">echo</span> <span class="token environment constant">$PWD</span>         <span class="token comment"># </span><span class="token variable">\`</span></span><span class="token builtin class-name">echo</span> $&#39; 是输入关键字, <span class="token builtin class-name">:</span> 后为匹配的命令, 方向键选择命令但不执行
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="全局变量" tabindex="-1"><a class="header-anchor" href="#全局变量" aria-hidden="true">#</a> 全局变量</h2><p>全局变量是在整个操作系统中都可用的变量，其值可以在任何地方被访问和修改</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token builtin class-name">echo</span> <span class="token environment constant">$HOME</span>                                    <span class="token comment"># 当前用户名</span>
 <span class="token operator">&gt;</span> root

 $ <span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span>                                    <span class="token comment"># 执行命令时所搜寻的路径列表, 以 : 分隔(环境变量设置路径)</span>
 <span class="token operator">&gt;</span> /usr/local/sbin:/usr/local/bin:/usr/bin

 $ <span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span>                                   <span class="token comment"># 当前使用的 shell </span>
 <span class="token operator">&gt;</span> /bin/zsh

 $ <span class="token builtin class-name">echo</span> <span class="token environment constant">$PWD</span>                                     <span class="token comment"># 当前绝对路径</span>
 <span class="token operator">&gt;</span> /root/Desktop/

 $ <span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span>                                  <span class="token comment"># 生成随机数字</span>
 <span class="token operator">&gt;</span> <span class="token number">2166</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 shell 启动文件(每次打开命令行均会执行)以永久设置环境变量, 使用 export 添加环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token operator">&lt;</span>variable name<span class="token operator">&gt;=</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>                   <span class="token comment"># 使用 export 临时修改环境变量, 执行的命令窗口关闭即失效</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/facsert                  <span class="token comment"># 将 /home/facsert 临时加入环境目录</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">LEARN</span><span class="token operator">=</span>TRUE                                <span class="token comment"># 自定义新的环境变量, 脚本间可以通过自定义环境变量通信</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/facsert                  <span class="token comment"># 将命令写入 shell 启动文件(每次启动 shell 均会执行文件上命令)</span>
<span class="token builtin class-name">source</span> ~/.bashrc                                 <span class="token comment"># 重新加载 shell 启动文件(~/.bashrc, ~/.zshrc )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>bash 执行脚本: 新建子 shell 执行脚本, 脚本中的 export 的变量只在子 shell 生效, 脚本结束变量失效<br> source 执行脚本: 脚本中的 export 变量加载入当前终端, 脚本结束仍然生效, 当前终端关闭后失效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token builtin class-name">echo</span> <span class="token string">&#39;export linux=&quot;bash&quot;&#39;</span> <span class="token operator">&gt;</span> bash.sh          <span class="token comment"># 生成脚本 bash.sh </span>
 $ <span class="token builtin class-name">echo</span> <span class="token string">&#39;export linux=&quot;source&quot;&#39;</span> <span class="token operator">&gt;</span> source.sh      <span class="token comment"># 生成脚本 source.sh</span>

 $ <span class="token function">bash</span> bash.sh <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;linux: <span class="token variable">$linux</span>&quot;</span>          <span class="token comment"># 使用 bash 添加 linux 变量</span>
 <span class="token operator">&gt;</span> linux:                                        <span class="token comment"># 脚本结束, 变量失效</span>
 
 $ <span class="token builtin class-name">source</span> source.sh <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;linux: <span class="token variable">$linux</span>&quot;</span>      <span class="token comment"># 使用 source 执行脚本</span>
 <span class="token operator">&gt;</span> linux: <span class="token builtin class-name">source</span> shell                           <span class="token comment"># 脚本结束, 变量仍然生效</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="系统相关" tabindex="-1"><a class="header-anchor" href="#系统相关" aria-hidden="true">#</a> 系统相关</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">shutdown</span> <span class="token parameter variable">-h</span> now                               <span class="token comment"># 关机</span>
 $ <span class="token function">shutdown</span> <span class="token parameter variable">-r</span> now                               <span class="token comment"># 重启</span>

 $ <span class="token function">date</span>                                          <span class="token comment"># 系统时间</span>
 <span class="token operator">&gt;</span> Sat Feb <span class="token number">25</span> <span class="token number">20</span>:34:10 CST <span class="token number">2023</span>

 $ unmae <span class="token parameter variable">-a</span>                                      <span class="token comment"># 查看系统内核信息</span>
 <span class="token operator">&gt;</span> inux facser <span class="token number">5.15</span>.79.1-microsoft-standard-WSL2 <span class="token comment">#1 SMP Wed Nov 23 01:01:46 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span>

 $ <span class="token function">ps</span> <span class="token parameter variable">-ef</span>                                        <span class="token comment"># 查看当前正在运行的所有进程</span>
 <span class="token operator">&gt;</span> <span class="token environment constant">UID</span>        PID  <span class="token environment constant">PPID</span>  C STIME TTY          TIME CMD
 <span class="token operator">&gt;</span> root      <span class="token number">1399</span>    <span class="token number">71</span>  <span class="token number">0</span> <span class="token number">19</span>:08 pts/4    00:00:00 /bin/zsh <span class="token parameter variable">-i</span>
 <span class="token operator">&gt;</span> root      <span class="token number">9481</span>   <span class="token number">490</span>  <span class="token number">0</span> <span class="token number">20</span>:24 pts/4    00:00:00 <span class="token function">bash</span> <span class="token parameter variable">-x</span> a.sh

 $ <span class="token function">kill</span> <span class="token operator">&lt;</span>pid<span class="token operator">&gt;</span>                                    <span class="token comment"># 根据 pid 关掉指定进程</span>
 $ <span class="token function">kill</span> <span class="token number">9481</span>
 <span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  + <span class="token number">9481</span> terminated  <span class="token function">bash</span> <span class="token parameter variable">-x</span> a.sh  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用户" tabindex="-1"><a class="header-anchor" href="#用户" aria-hidden="true">#</a> 用户</h2><h3 id="启用-root-用户" tabindex="-1"><a class="header-anchor" href="#启用-root-用户" aria-hidden="true">#</a> 启用 root 用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">sudo</span> <span class="token function">passwd</span> root
 <span class="token operator">&gt;</span> Enter new UNIX password:                      <span class="token comment"># 设置 root 用户密码(输入时密码不可见)</span>
 <span class="token operator">&gt;</span> Retype new UNIX password:                     <span class="token comment"># 重复输入 root 密码</span>
 <span class="token operator">&gt;</span> passwd: password updated successfully         <span class="token comment"># 设置成功</span>

 facser@master:~/Desktop$ <span class="token function">su</span> root                <span class="token comment"># 切换 root 用户 (用户名@hostname:当前路径)</span>
 root@master:~/Desktop<span class="token comment"># exit                     # 退出 root, 普通用户 $ 开头, root 用户 # 开头</span>

 $ <span class="token function">su</span> <span class="token operator">&lt;</span>user<span class="token operator">&gt;</span>                                     <span class="token comment"># 切换用户</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建用户" tabindex="-1"><a class="header-anchor" href="#创建用户" aria-hidden="true">#</a> 创建用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">useradd</span> <span class="token parameter variable">-m</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>                         <span class="token comment"># 创建用户, 并在 /home 生成用户目录</span>
 $ <span class="token function">useradd</span> <span class="token parameter variable">-l</span> <span class="token operator">&lt;</span>oldName<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>newName<span class="token operator">&gt;</span>                <span class="token comment"># 更换用户名称</span>

 $ <span class="token function">passwd</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>                             <span class="token comment"># 用户添加密码</span>
 <span class="token operator">&gt;</span> New password:                                 <span class="token comment"># 输入密码, 密码不显示</span>
 <span class="token operator">&gt;</span> Retype new password:                          <span class="token comment"># 重复输入密码, 密码不显示</span>

 $ <span class="token function">userdel</span> <span class="token parameter variable">-r</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>                         <span class="token comment"># 删除用户</span>
 <span class="token operator">&gt;</span> no <span class="token function">crontab</span> <span class="token keyword">for</span> facsert
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sudo 免密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">sudo</span> <span class="token function">vi</span> /etc/sudoers                          <span class="token comment"># 编辑配置文件</span>

 <span class="token operator">&gt;</span> %sudo <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL:ALL<span class="token punctuation">)</span> ALL                       <span class="token comment"># 找到这一栏, 建议注释掉复制一行修改</span>
 <span class="token operator">&gt;</span> %sudo <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL:ALL<span class="token punctuation">)</span> NOPASSWD:ALL              <span class="token comment"># 修改后, 强制保存退出</span>
 <span class="token operator">&gt;</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> NOPASSWD:ALL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注: 该文件必须强制写入, 不能修改文件权限, 否则报错</p><h2 id="通配符号" tabindex="-1"><a class="header-anchor" href="#通配符号" aria-hidden="true">#</a> 通配符号</h2><h3 id="任意单个字符" tabindex="-1"><a class="header-anchor" href="#任意单个字符" aria-hidden="true">#</a> <code>？</code> 任意单个字符</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">touch</span> ab a <span class="token function">bc</span> abc                             <span class="token comment"># 生成 ab a ba abc 4 个文件</span>
 
 $ <span class="token function">ls</span> ?b                                         <span class="token comment"># ? 可以指代任意单个字符</span>
 <span class="token operator">&gt;</span> ab

 $ <span class="token function">ls</span> b?
 <span class="token operator">&gt;</span> <span class="token function">bc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="任意多个字符" tabindex="-1"><a class="header-anchor" href="#任意多个字符" aria-hidden="true">#</a> <code>*</code> 任意多个字符</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">touch</span> ab a <span class="token function">bc</span> abc                             <span class="token comment"># 生成 ab a ba abc 4 个文件</span>
 
 $ <span class="token function">ls</span> *                                          <span class="token comment"># * 可以指代任意多个字符</span>
 <span class="token operator">&gt;</span> a  ab  abc  <span class="token function">bc</span>

 $ <span class="token function">ls</span> a*                                    
 <span class="token operator">&gt;</span> a  ab  abc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="任意多级目录" tabindex="-1"><a class="header-anchor" href="#任意多级目录" aria-hidden="true">#</a> <code>**</code> 任意多级目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">cat</span> /etc/**/word                               <span class="token comment"># /etc/ 文件夹下所有 word 文件</span>

 $ <span class="token function">ls</span> learn/**/*.md                               <span class="token comment"># 显示 learn 目录下所有 markdown 文件 </span>
 <span class="token operator">&gt;</span> a.md b.md c.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配范围" tabindex="-1"><a class="header-anchor" href="#匹配范围" aria-hidden="true">#</a> <code>[]</code> 匹配范围</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token function">touch</span> aa ab ac aab                            <span class="token comment"># 生成 ab a ba abc 4 个文件</span>

 $ <span class="token function">ls</span> a<span class="token punctuation">[</span>ab<span class="token punctuation">]</span>                                      <span class="token comment"># 匹配 [] 内任意一个字符</span>
 <span class="token operator">&gt;</span> aa ab
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特殊符号" tabindex="-1"><a class="header-anchor" href="#特殊符号" aria-hidden="true">#</a> 特殊符号</h2><h3 id="输出重定向" tabindex="-1"><a class="header-anchor" href="#输出重定向" aria-hidden="true">#</a> 输出重定向</h3><table><thead><tr><th style="text-align:center;">输出重定向</th><th style="text-align:center;">输出重定向追加写入</th><th style="text-align:center;">输入重定向</th><th style="text-align:center;">读取标准输入直至分界符号</th></tr></thead><tbody><tr><td style="text-align:center;"><code>&gt;</code></td><td style="text-align:center;"><code>&gt;&gt;</code></td><td style="text-align:center;"><code>&lt;</code></td><td style="text-align:center;"><code>&lt;&lt;</code></td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token operator">&gt;</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>                            <span class="token comment"># 将命令返回值覆盖写入文件(原文件清空后写入)</span>
 $ <span class="token function">date</span> <span class="token operator">&gt;</span> file.log                               <span class="token comment"># 将 date 命令返回值写入 file.log 文件, 命令行不显示结果</span>
 <span class="token operator">&gt;</span> Sat Feb <span class="token number">25</span> <span class="token number">20</span>:39:56 CST <span class="token number">2023</span>

 $ <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token operator">&gt;&gt;</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>                           <span class="token comment"># 将输出追加写入文件(原文件内容保留)</span>
 $ <span class="token function">date</span> <span class="token operator">&gt;&gt;</span> file.log                              <span class="token comment"># 将 date 命令返回值追加写入 file.log 内容结尾, 命令行不显示结果</span>
 <span class="token operator">&gt;</span> Sat Feb <span class="token number">25</span> <span class="token number">20</span>:39:56 CST <span class="token number">2023</span>
 <span class="token operator">&gt;</span> Sat Feb <span class="token number">25</span> <span class="token number">20</span>:40:51 CST <span class="token number">2023</span>

 $ <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token operator">&lt;</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>                            <span class="token comment"># 将文件内容重定向为标准输入</span>
 $ <span class="token function">cat</span> <span class="token operator">&lt;</span> file.log                                <span class="token comment"># 读取 file.log 并打印</span>
 <span class="token operator">&gt;</span> Sat Feb <span class="token number">25</span> <span class="token number">20</span>:39:56 CST <span class="token number">2023</span>
 <span class="token operator">&gt;</span> Sat Feb <span class="token number">25</span> <span class="token number">20</span>:40:51 CST <span class="token number">2023</span>

 $ <span class="token function">touch</span> <span class="token variable"><span class="token variable">$(</span><span class="token operator">&lt;</span> fileName.log<span class="token variable">)</span></span>                       <span class="token comment"># 根据文件内的文件列表生成文件</span>

 $ <span class="token function">cat</span> <span class="token operator">&lt;&lt;</span> EOF                                    <span class="token comment"># 实现多行输入, 分界符号 EOF 可自定义</span>
 <span class="token operator">&gt;</span> line
 <span class="token operator">&gt;</span> line
 <span class="token operator">&gt;</span> EOF
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&amp;1</code>: 标准输出, 命令行输出, 能直接重定向至文件<br><code>&amp;2</code>: 标准错误, 命令执行错误输出, 需要将错误重定向至标准输出再指向文件<br><code>/dev/null</code>: 空, 指代垃圾桶或回收站</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ mian                                          <span class="token comment"># 错误命令,显示错误输出</span>
 <span class="token operator">&gt;</span> Command <span class="token string">&#39;mian&#39;</span> not found

 $ data <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null                              <span class="token comment"># 错误命令, 错误输出重定向至回收站, 不显示错误     </span>
 $ <span class="token function">date</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null                              <span class="token comment"># 正确命令, 标准输出重定向至回收站, 不显示返回值</span>

 $ data <span class="token number">2</span> <span class="token operator">&gt;</span> date.log                             <span class="token comment"># 命令行显示错误, 文件不显示, 错误输出无法直接重定向文件</span>
 $ data <span class="token operator">&gt;</span> date.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>                          <span class="token comment"># 命令行不显示错误, 文件内显示, 错误输出重定向至文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="单词缩写" tabindex="-1"><a class="header-anchor" href="#单词缩写" aria-hidden="true">#</a> 单词缩写</h2><table><thead><tr><th style="text-align:center;">缩写</th><th style="text-align:left;">全称</th><th style="text-align:left;">翻译</th></tr></thead><tbody><tr><td style="text-align:center;">a</td><td style="text-align:left;"><code>all</code></td><td style="text-align:left;">全部</td></tr><tr><td style="text-align:center;">b</td><td style="text-align:left;"><code>backup</code></td><td style="text-align:left;">备份</td></tr><tr><td style="text-align:center;">c</td><td style="text-align:left;"><code>count</code></td><td style="text-align:left;">计数</td></tr><tr><td style="text-align:center;">d</td><td style="text-align:left;"><code>directory</code></td><td style="text-align:left;">文件</td></tr><tr><td style="text-align:center;">f</td><td style="text-align:left;"><code>force</code></td><td style="text-align:left;">强制</td></tr><tr><td style="text-align:center;">h</td><td style="text-align:left;"><code>help</code></td><td style="text-align:left;">帮助</td></tr><tr><td style="text-align:center;">i</td><td style="text-align:left;"><code>interactive</code></td><td style="text-align:left;">交互的</td></tr><tr><td style="text-align:center;">l</td><td style="text-align:left;"><code>long</code></td><td style="text-align:left;">长格式的</td></tr><tr><td style="text-align:center;">r / R</td><td style="text-align:left;"><code>recursive</code></td><td style="text-align:left;">递归</td></tr><tr><td style="text-align:center;">s / S</td><td style="text-align:left;"><code>sort/size</code></td><td style="text-align:left;">排序/大小</td></tr><tr><td style="text-align:center;">t</td><td style="text-align:left;"><code>time</code></td><td style="text-align:left;">时间</td></tr><tr><td style="text-align:center;">u</td><td style="text-align:left;"><code>user</code></td><td style="text-align:left;">用户</td></tr><tr><td style="text-align:center;">v</td><td style="text-align:left;"><code>version / verbose</code></td><td style="text-align:left;">版本/详细的</td></tr></tbody></table><h3 id="符号" tabindex="-1"><a class="header-anchor" href="#符号" aria-hidden="true">#</a> 符号</h3><table><thead><tr><th style="text-align:center;">符号</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:center;"><code>&gt;</code></td><td style="text-align:left;">输出重定向, 覆盖</td></tr><tr><td style="text-align:center;"><code>&gt;&gt;</code></td><td style="text-align:left;">输出重定向, 追加</td></tr><tr><td style="text-align:center;"><code>&amp;</code></td><td style="text-align:left;">程序放入后台执行</td></tr><tr><td style="text-align:center;"><code>#</code></td><td style="text-align:left;">注释</td></tr><tr><td style="text-align:center;"><code>&amp;&amp;</code></td><td style="text-align:left;">且, 左边成功才执行右边</td></tr></tbody></table><h3 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h3><table><thead><tr><th style="text-align:center;">符号</th><th style="text-align:left;">模式</th></tr></thead><tbody><tr><td style="text-align:center;"><code>^</code></td><td style="text-align:left;">锚定行首</td></tr><tr><td style="text-align:center;"><code>$</code></td><td style="text-align:left;">锚定行尾</td></tr><tr><td style="text-align:center;"><code>()</code></td><td style="text-align:left;">捆绑成一个整体</td></tr><tr><td style="text-align:center;"><code>.</code></td><td style="text-align:left;">任意一个字符</td></tr><tr><td style="text-align:center;"><code>?</code></td><td style="text-align:left;">前面字符或模式 0 或 1 次</td></tr><tr><td style="text-align:center;"><code>{m}</code></td><td style="text-align:left;">前面字符或模式 m 次</td></tr><tr><td style="text-align:center;"><code>{m, n}</code></td><td style="text-align:left;">前面字符或模式次数在 m n 之间</td></tr><tr><td style="text-align:center;"><code>+</code></td><td style="text-align:left;">前面字符或模式 1 次或多次</td></tr><tr><td style="text-align:center;"><code>*</code></td><td style="text-align:left;">前面字符或模式任意次</td></tr><tr><td style="text-align:center;"><code>[]</code></td><td style="text-align:left;">括号范围内均可</td></tr><tr><td style="text-align:center;"><code>[^]</code></td><td style="text-align:left;">括号范围之外均可</td></tr></tbody></table>`,45);function m(u,k){const s=e("ExternalLinkIcon");return t(),l("div",null,[n("p",null,[n("a",r,[o("linux 命令"),p(s)])]),d])}const g=a(i,[["render",m],["__file","Linux-1-basic.html.vue"]]);export{g as default};
