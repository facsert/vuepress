import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,f as h}from"./app-8da2a3ac.js";const d={},i=h('<h2 id="代码可读性" tabindex="-1"><a class="header-anchor" href="#代码可读性" aria-hidden="true">#</a> 代码可读性</h2><p>最小化理解代码的时间<br> 平衡开发时间和易读性</p><ul><li>改进代码文字</li><li>简化代码控制流</li><li>组织代码功能</li></ul><h2 id="改进代码文字" tabindex="-1"><a class="header-anchor" href="#改进代码文字" aria-hidden="true">#</a> 改进代码文字</h2><h3 id="风格" tabindex="-1"><a class="header-anchor" href="#风格" aria-hidden="true">#</a> 风格</h3><p>紧凑简洁, 段落清晰, 风格一致</p><h3 id="命名" tabindex="-1"><a class="header-anchor" href="#命名" aria-hidden="true">#</a> 命名</h3><p>简洁而准确的命名</p><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><p>言简意赅的注释</p><h2 id="简化代码控制流" tabindex="-1"><a class="header-anchor" href="#简化代码控制流" aria-hidden="true">#</a> 简化代码控制流</h2><h3 id="分支" tabindex="-1"><a class="header-anchor" href="#分支" aria-hidden="true">#</a> 分支</h3><p>避免分支嵌套, 提前退出<br> 优先正向分支</p><h3 id="边界" tabindex="-1"><a class="header-anchor" href="#边界" aria-hidden="true">#</a> 边界</h3><p>全面思考边界的可能性<br> 聚焦重心, 忽略或合并不关注的内容</p><h3 id="变量的逻辑" tabindex="-1"><a class="header-anchor" href="#变量的逻辑" aria-hidden="true">#</a> 变量的逻辑</h3><p>少创建无效变量<br> 减小变量作用域</p><h2 id="组织代码功能" tabindex="-1"><a class="header-anchor" href="#组织代码功能" aria-hidden="true">#</a> 组织代码功能</h2><h3 id="模块化" tabindex="-1"><a class="header-anchor" href="#模块化" aria-hidden="true">#</a> 模块化</h3><p>根据项目规模保持模块的粒度</p><h3 id="少写代码" tabindex="-1"><a class="header-anchor" href="#少写代码" aria-hidden="true">#</a> 少写代码</h3><p>开发时不要重复造轮子</p><h3 id="分离工具代码" tabindex="-1"><a class="header-anchor" href="#分离工具代码" aria-hidden="true">#</a> 分离工具代码</h3><p>抽离与系统无关的代码</p>',24),n=[i];function t(c,s){return e(),r("div",null,n)}const p=a(d,[["render",t],["__file","code-0-overview.html.vue"]]);export{p as default};
