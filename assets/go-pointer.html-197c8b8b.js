const a=JSON.parse('{"key":"v-286be95e","path":"/Go/tutorial/go-pointer.html","title":"Go 指针","lang":"en-US","frontmatter":{"title":"Go 指针","description":"指针 变量 指针变量 strVar := \\"initial\\" // 初始化变量赋值, 绑定一个固定地址, 值可以变, 地址不变 Printf(\\"initial strVar value:%v, addr: %p\\\\n\\", strVar, &amp;strVar) straddr := &amp;strVar // 初始化地址类型变量并赋值, 变量绑定地址, 变量值是一个地址 Printf(\\"initial straddr value: %v, addr: %p\\\\n\\", straddr, &amp;straddr) addrVal := *straddr // 初始化并赋值, 变量绑定地址, 地址类型才能取值 Printf(\\"initial strVar value:%v, addr: %p\\\\n\\", addrVal, &amp;addrVal) strVar = \\"modify\\" Printf(\\"modify strVar value:%v, addr: %p\\\\n\\", strVar, &amp;strVar) Printf(\\"modify straddr value: %v, addr: %p\\\\n\\", straddr, &amp;straddr) Printf(\\"modify strVar value:%v, addr: %p\\\\n\\", addrVal, &amp;addrVal) &gt; strVar value:initial, addr: 0xc0000142b0 &gt; straddr value: 0xc0000142b0, addr: 0xc000012038 &gt; addrVal value:initial, addr: 0xc0000142d0 &gt; strVar value:modify, addr: 0xc0000142b0 // strVar 重新赋值(地址对应的值变化), 地址不变 &gt; straddr value: 0xc0000142b0, addr: 0xc000012038 &gt; addrVal value:initial, addr: 0xc0000142d0 // 地址对应的值没有变化","date":"2022-09-27T19:24:13.000Z","category":["Go 教程"],"tag":["Go"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/Go/tutorial/go-pointer.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"Go 指针"}],["meta",{"property":"og:description","content":"指针 变量 指针变量 strVar := \\"initial\\" // 初始化变量赋值, 绑定一个固定地址, 值可以变, 地址不变 Printf(\\"initial strVar value:%v, addr: %p\\\\n\\", strVar, &amp;strVar) straddr := &amp;strVar // 初始化地址类型变量并赋值, 变量绑定地址, 变量值是一个地址 Printf(\\"initial straddr value: %v, addr: %p\\\\n\\", straddr, &amp;straddr) addrVal := *straddr // 初始化并赋值, 变量绑定地址, 地址类型才能取值 Printf(\\"initial strVar value:%v, addr: %p\\\\n\\", addrVal, &amp;addrVal) strVar = \\"modify\\" Printf(\\"modify strVar value:%v, addr: %p\\\\n\\", strVar, &amp;strVar) Printf(\\"modify straddr value: %v, addr: %p\\\\n\\", straddr, &amp;straddr) Printf(\\"modify strVar value:%v, addr: %p\\\\n\\", addrVal, &amp;addrVal) &gt; strVar value:initial, addr: 0xc0000142b0 &gt; straddr value: 0xc0000142b0, addr: 0xc000012038 &gt; addrVal value:initial, addr: 0xc0000142d0 &gt; strVar value:modify, addr: 0xc0000142b0 // strVar 重新赋值(地址对应的值变化), 地址不变 &gt; straddr value: 0xc0000142b0, addr: 0xc000012038 &gt; addrVal value:initial, addr: 0xc0000142d0 // 地址对应的值没有变化"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2022-09-27T19:24:13.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go 指针\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-27T19:24:13.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"指针","slug":"指针","link":"#指针","children":[{"level":3,"title":"变量地址","slug":"变量地址","link":"#变量地址","children":[]}]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":1.24,"words":371},"filePathRelative":"Go/tutorial/go-pointer.md","localizedDate":"September 27, 2022","excerpt":"<h2> 指针</h2>\\n<ul>\\n<li>变量</li>\\n<li>指针变量</li>\\n</ul>\\n<div class=\\"language-Go line-numbers-mode\\" data-ext=\\"Go\\"><pre class=\\"language-Go\\"><code> strVar := \\"initial\\"                             // 初始化变量赋值, 绑定一个固定地址, 值可以变, 地址不变\\n Printf(\\"initial strVar value:%v, addr: %p\\\\n\\", strVar, &amp;strVar)\\n\\n straddr := &amp;strVar                              // 初始化地址类型变量并赋值, 变量绑定地址, 变量值是一个地址\\n Printf(\\"initial straddr value: %v, addr: %p\\\\n\\", straddr, &amp;straddr)\\n\\n addrVal := *straddr                             // 初始化并赋值, 变量绑定地址, 地址类型才能取值\\n Printf(\\"initial strVar value:%v, addr: %p\\\\n\\", addrVal, &amp;addrVal)\\n\\n strVar = \\"modify\\"                               \\n\\n Printf(\\"modify strVar value:%v, addr: %p\\\\n\\", strVar, &amp;strVar)\\n Printf(\\"modify straddr value: %v, addr: %p\\\\n\\", straddr, &amp;straddr)\\n Printf(\\"modify strVar value:%v, addr: %p\\\\n\\", addrVal, &amp;addrVal)\\n\\n &gt; strVar value:initial, addr: 0xc0000142b0\\n &gt; straddr value: 0xc0000142b0, addr: 0xc000012038\\n &gt; addrVal value:initial, addr: 0xc0000142d0\\n\\n &gt; strVar value:modify, addr: 0xc0000142b0       // strVar 重新赋值(地址对应的值变化), 地址不变\\n &gt; straddr value: 0xc0000142b0, addr: 0xc000012038\\n &gt; addrVal value:initial, addr: 0xc0000142d0     // 地址对应的值没有变化\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{a as data};
