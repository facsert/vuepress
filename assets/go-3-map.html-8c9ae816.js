import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-8da2a3ac.js";const p={},e=t(`<h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><p>map 是一组<strong>无序</strong>的键值对的集合<br> map 是引用类型, 赋值时传递的是地址</p><h3 id="map-初始化" tabindex="-1"><a class="header-anchor" href="#map-初始化" aria-hidden="true">#</a> map 初始化</h3><p>map 只声明不初始化取零值 nil, nil map 只能读不能写入<br> map 初始化未添加值是 empty map, empty map 不等于 nil map</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>key <span class="token keyword">type</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>value <span class="token keyword">type</span><span class="token operator">&gt;</span>                      <span class="token comment">// map 类型</span>

<span class="token keyword">var</span> strMap <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>          <span class="token comment">// 声明并初始化一个 empty map, map 容量为 2</span>
strMap<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span>                                <span class="token comment">// 已初始化的 map 赋值</span>
strMap<span class="token punctuation">[</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;b&quot;</span>

intMap <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>                       <span class="token comment">// intMap 声明并初始化, 并赋值</span>
   <span class="token string">&quot;one&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
   <span class="token string">&quot;two&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;int map %#v\\n&quot;</span><span class="token punctuation">,</span> intMap<span class="token punctuation">)</span>
<span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;str map %#v\\n&quot;</span><span class="token punctuation">,</span> strMap<span class="token punctuation">)</span>
<span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;str map length %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>strMap<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token operator">&gt;</span> <span class="token builtin">int</span> <span class="token keyword">map</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">}</span>      
<span class="token operator">&gt;</span> str <span class="token keyword">map</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">}</span>    <span class="token comment">// map 可添加数据, 允许超过容量</span>
<span class="token operator">&gt;</span> str <span class="token keyword">map</span> length <span class="token number">3</span>                               <span class="token comment">// 无法使用 cap 查看 map 容量, 可以使用 len 查看长度</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-传递" tabindex="-1"><a class="header-anchor" href="#map-传递" aria-hidden="true">#</a> map 传递</h3><p>map 将引用拷贝了一份给赋值变量, 两个引用指向同一个数据<br> map 作为函数参数传递时也是拷贝一份引用进入函数</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>intMap <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
   <span class="token string">&quot;1st&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

copyMap <span class="token operator">:=</span> intMap                                <span class="token comment">// map 是引用类型, 传递的是引用并非数据的拷贝</span>
copyMap<span class="token punctuation">[</span><span class="token string">&quot;2nd&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>                                                  
intMap<span class="token punctuation">[</span><span class="token string">&quot;1st&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>                               

<span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;intMap %#v\\n&quot;</span><span class="token punctuation">,</span> intMap<span class="token punctuation">)</span>
<span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;copyMap %#v\\n&quot;</span><span class="token punctuation">,</span> copyMap<span class="token punctuation">)</span>

<span class="token operator">&gt;</span> intMap <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token string">&quot;1st&quot;</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;2nd&quot;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">}</span>        <span class="token comment">// 任意一个变量修改数据, 两个变量都会同步修改</span>
<span class="token operator">&gt;</span> copyMap <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token string">&quot;1st&quot;</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;2nd&quot;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">}</span>       <span class="token comment">// 两个变量指向同一个值, 结果一致</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-遍历" tabindex="-1"><a class="header-anchor" href="#map-遍历" aria-hidden="true">#</a> map 遍历</h3><p>map 使用 range 遍历 map<br> map 值拷贝也需要使用 range 遍历, copy 只适用于切片</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>intMap <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
   <span class="token string">&quot;1st&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
   <span class="token string">&quot;2nd&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
   <span class="token string">&quot;3rd&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> 

copyMap <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token operator">:=</span> <span class="token keyword">range</span> intMap <span class="token punctuation">{</span>
   copyMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
   <span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v: %v \\n&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token operator">&gt;</span> 1st<span class="token punctuation">:</span> <span class="token number">1</span>
<span class="token operator">&gt;</span> 2nd<span class="token punctuation">:</span> <span class="token number">2</span>
<span class="token operator">&gt;</span> 3rd<span class="token punctuation">:</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-取值" tabindex="-1"><a class="header-anchor" href="#map-取值" aria-hidden="true">#</a> map 取值</h3><p>map 使用 [key] 取值</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code> intMap <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;1st&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&quot;2nd&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span> 

 value<span class="token punctuation">,</span> ok <span class="token operator">:=</span> intMap<span class="token punctuation">[</span><span class="token string">&quot;3rd&quot;</span><span class="token punctuation">]</span>                      <span class="token comment">// map 取值</span>

 <span class="token keyword">if</span> ok <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>                                 <span class="token comment">// ok 为 true, vaule 为对应 key 的值</span>
    <span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;value: %v\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> ok <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token punctuation">{</span>                                <span class="token comment">// ok 为 false, map 不存在 key, value 为类型零值</span>
    <span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;key not in map&quot;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map-删除" tabindex="-1"><a class="header-anchor" href="#map-删除" aria-hidden="true">#</a> map 删除</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code> intMap <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>
    <span class="token string">&quot;1st&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&quot;2nd&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>

 <span class="token function">delete</span><span class="token punctuation">(</span>intMap<span class="token punctuation">,</span> <span class="token string">&quot;1st&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","go-3-map.html.vue"]]);export{r as default};
