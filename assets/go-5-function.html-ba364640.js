const n=JSON.parse('{"key":"v-77730087","path":"/Go/tutorial/go-5-function.html","title":"Go 函数","lang":"en-US","frontmatter":{"title":"Go 函数","description":"function 定义 func &lt;function name&gt; (&lt;parameter name&gt; &lt;parameter type&gt;) (&lt;return type&gt;) { &lt;functuion code&gt; } func show() { // 无参数, 无返回值, 对应内容不填 Println(\\"no parameter and no return\\") } func add(x int, y int) int { // 参数和类型要对应 return x + y } func self(x, y int) (int, int) { // 同类型参数合并, 多返回值, 返回值类型需要括号 return x, y }","date":"2023-03-28T19:26:24.000Z","category":["Go 教程"],"tag":["Go"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/Go/tutorial/go-5-function.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"Go 函数"}],["meta",{"property":"og:description","content":"function 定义 func &lt;function name&gt; (&lt;parameter name&gt; &lt;parameter type&gt;) (&lt;return type&gt;) { &lt;functuion code&gt; } func show() { // 无参数, 无返回值, 对应内容不填 Println(\\"no parameter and no return\\") } func add(x int, y int) int { // 参数和类型要对应 return x + y } func self(x, y int) (int, int) { // 同类型参数合并, 多返回值, 返回值类型需要括号 return x, y }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2023-03-28T19:26:24.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go 函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-28T19:26:24.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"function 定义","slug":"function-定义","link":"#function-定义","children":[{"level":3,"title":"参数与返回值","slug":"参数与返回值","link":"#参数与返回值","children":[]}]},{"level":2,"title":"匿名函数","slug":"匿名函数","link":"#匿名函数","children":[]},{"level":2,"title":"defer","slug":"defer","link":"#defer","children":[]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":1.68,"words":504},"filePathRelative":"Go/tutorial/go-5-function.md","localizedDate":"March 28, 2023","excerpt":"<h2> function 定义</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token operator\\">&lt;</span>function name<span class=\\"token operator\\">&gt;</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&lt;</span>parameter name<span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">&lt;</span>parameter <span class=\\"token keyword\\">type</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">type</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token operator\\">&lt;</span>functuion code<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">show</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>                                    <span class=\\"token comment\\">// 无参数, 无返回值, 对应内容不填</span>\\n    <span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"no parameter and no return\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>x <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> y <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">int</span> <span class=\\"token punctuation\\">{</span>                     <span class=\\"token comment\\">// 参数和类型要对应</span>\\n    <span class=\\"token keyword\\">return</span> x <span class=\\"token operator\\">+</span> y\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">self</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> y <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>                 <span class=\\"token comment\\">// 同类型参数合并, 多返回值, 返回值类型需要括号</span>\\n    <span class=\\"token keyword\\">return</span> x<span class=\\"token punctuation\\">,</span> y\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
