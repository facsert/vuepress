import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as e}from"./app.8372aa73.js";const p={},t=e(`<h2 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h2><p>\u521B\u5EFA main.c \u6587\u4EF6\uFF0C\u5199\u5165\u4EE3\u7801</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span>                               <span class="token comment">// \u5F15\u5165\u6807\u51C6\u5E93 stdio.h (/usr/include/)</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                 <span class="token comment">// \u5B9A\u4E49\u6267\u884C\u5165\u53E3, \u5165\u53E3\u51FD\u6570\u540D\u79F0\u56FA\u5B9A\u4E3A main</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment">// \u4F7F\u7528 stdio.h \u4E2D\u7684 printf \u51FD\u6570</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 GCC \u7F16\u8BD1</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ gcc main.c <span class="token parameter variable">-o</span> main                             <span class="token comment"># \u7F16\u8BD1 main.c \u6587\u4EF6\u6210\u53EF\u6267\u884C\u6587\u4EF6 main </span>
$ ./main                                         <span class="token comment"># \u6267\u884C main </span>
<span class="token operator">&gt;</span> hello world<span class="token operator">!</span>                                   <span class="token comment"># \u663E\u793A\u6267\u884C\u7ED3\u679C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>C \u662F\u7F16\u8BD1\u6027\u8BED\u8A00, C \u4EE3\u7801\u9700\u8981\u7F16\u8BD1\u6210\u53EF\u6267\u884C\u6587\u4EF6\u4E4B\u540E\u624D\u80FD\u8FD0\u884C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>main.c  --1--<span class="token operator">&gt;</span> main.i --2--<span class="token operator">&gt;</span> main.s --3--<span class="token operator">&gt;</span> main.o --4--<span class="token operator">&gt;</span> main

<span class="token comment"># main.c -&gt; main.i \u9884\u5904\u7406, \u5C55\u5F00\u5934\u6587\u4EF6\uFF0C\u5B8F\u66FF\u6362\uFF0C\u5168\u6389\u6CE8\u91CA\uFF0C\u6761\u4EF6\u7F16\u8BD1</span>
<span class="token comment"># main.i -&gt; main.s \u7F16\u8BD1 \u4F18\u5316\u8F6C\u5316\u6210\u6C47\u7F16\u4EE3\u7801</span>
<span class="token comment"># main.s -&gt; main.o \u6C47\u7F16\u8F6C\u6210\u673A\u5668\u7801</span>
<span class="token comment"># main.o -&gt; main   \u94FE\u63A5\u5230\u4E00\u8D77\u751F\u4EA7\u53EF\u6267\u884C\u6587\u4EF6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#\u7248\u672C" aria-hidden="true">#</a> \u7248\u672C</h2><p>C \u7248\u672C\u6309\u7167\u53D1\u5E03\u65F6\u95F4\u5B9A\u4E49: C89/C90, C99, C11, C17, C2X C \u4F7F\u7528 gcc \u7F16\u8BD1, \u4E0D\u540C gcc \u7248\u672C\u9ED8\u8BA4\u4F7F\u7528\u4E0D\u540C\u6807\u51C6\u7F16\u8BD1</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ gcc <span class="token parameter variable">-dM</span> <span class="token parameter variable">-E</span> - <span class="token operator">&lt;</span> /dev/null <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;STDC_VERSION&quot;</span> <span class="token comment"># \u67E5\u770B\u9ED8\u8BA4\u4F7F\u7528\u7684 C \u6807\u51C6</span>

<span class="token operator">&gt;</span> <span class="token comment">#define __STDC_VERSION__ 199901L               # \u9ED8\u8BA4\u4F7F\u7528 C99 \u6807\u51C6\u7F16\u8BD1</span>
<span class="token operator">&gt;</span> <span class="token comment">#define __STDC_VERSION__ 201112L               # \u9ED8\u8BA4\u4F7F\u7528 C11 \u6807\u51C6\u7F16\u8BD1</span>
<span class="token operator">&gt;</span> <span class="token comment">#define __STDC_VERSION__ 201710L               # \u9ED8\u8BA4\u4F7F\u7528 C17 \u6807\u51C6\u7F16\u8BD1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F3A\u5236\u4F7F\u7528 <code>-std=&lt;cxx&gt;</code> \u6807\u51C6\u7F16\u8BD1</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">cat</span> <span class="token parameter variable">-n</span> main.c                                  <span class="token comment"># \u5199\u4E00\u4E2A for \u5FAA\u73AF</span>
<span class="token operator">&gt;</span> <span class="token number">1</span>  <span class="token comment">#include &lt;stdio.h&gt;</span>
<span class="token operator">&gt;</span> <span class="token number">2</span>
<span class="token operator">&gt;</span> <span class="token number">3</span>  int <span class="token function-name function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">&gt;</span> <span class="token number">4</span>      for<span class="token punctuation">(</span>int <span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">&gt;</span> <span class="token number">5</span>          printf<span class="token punctuation">(</span><span class="token string">&quot;index: %d <span class="token entity" title="\\n">\\n</span>&quot;</span>, i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&gt;</span> <span class="token number">6</span>      <span class="token punctuation">}</span>
<span class="token operator">&gt;</span> <span class="token number">7</span>  <span class="token punctuation">}</span>

$ gcc main.c <span class="token parameter variable">-o</span> main <span class="token parameter variable">-std</span><span class="token operator">=</span>c89                    <span class="token comment"># \u5F3A\u5236\u4F7F\u7528 C89/C90(\u540C\u4E00\u6807\u51C6\u4E0D\u540C\u53EB\u6CD5) \u7F16\u8BD1</span>
<span class="token operator">&gt;</span> main.c: In <span class="token keyword">function</span> \u2018main\u2019:
<span class="token operator">&gt;</span> main.c:5:5: error: \u2018for\u2019 loop initial declarations are only allowed <span class="token keyword">in</span> C99 or C11 mode
<span class="token operator">&gt;</span>    for<span class="token punctuation">(</span>int <span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token comment"># C89/C90 \u6807\u51C6\u4E0D\u652F\u6301\u5728 for \u5FAA\u73AF\u5185\u5B9A\u4E49\u53D8\u91CF</span>
<span class="token operator">&gt;</span>    ^~~                                         <span class="token comment"># \u63D0\u793A\u4F7F\u7528 C99 \u6216\u4EE5\u4E0A\u7684\u6807\u51C6\u7F16\u8BD1</span>
<span class="token operator">&gt;</span> main.c:5:5: note: use option <span class="token parameter variable">-std</span><span class="token operator">=</span>c99, <span class="token parameter variable">-std</span><span class="token operator">=</span>gnu99, <span class="token parameter variable">-std</span><span class="token operator">=</span>c11 or <span class="token parameter variable">-std</span><span class="token operator">=</span>gnu11 to compile your code
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u683C\u5F0F" aria-hidden="true">#</a> \u683C\u5F0F</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> num<span class="token punctuation">;</span>                                         <span class="token comment">// \u58F0\u660E\u53D8\u91CF &lt;\u7C7B\u578B&gt; &lt;\u53D8\u91CF\u540D&gt;; \u5206\u53F7\u662F\u5FC5\u987B\u7684</span>
num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                                         <span class="token comment">// \u53D8\u91CF\u5FC5\u987B\u58F0\u660E\u540E\u624D\u53EF\u4EE5\u8D4B\u503C</span>

<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>                                     <span class="token comment">// \u53D8\u91CF\u58F0\u660E\u5E76\u8D4B\u503C, \u7B49\u53F7\u4E24\u8FB9\u7A7A\u683C\u4E0D\u662F\u5FC5\u987B</span>

<span class="token keyword">int</span>                                              <span class="token comment">// \u8BED\u53E5\u4EE5\u5206\u53F7\u7ED3\u5C3E, \u7F16\u8BD1\u5668\u4F1A\u5FFD\u7565\u6362\u884C</span>
num
<span class="token operator">=</span>
<span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">add</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>                         <span class="token comment">// &lt;return type&gt; &lt;function name&gt; (&lt;arg type&gt; &lt;arg name&gt;) {  </span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>                             <span class="token comment">// code block</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>                                  <span class="token comment">// code block</span>
<span class="token punctuation">}</span>                                                <span class="token comment">// }  function end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5173\u952E\u5B57" aria-hidden="true">#</a> \u5173\u952E\u5B57</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>branch<span class="token operator">:</span>    <span class="token keyword">if</span>     <span class="token keyword">else</span>  <span class="token keyword">switch</span>  <span class="token keyword">case</span>  <span class="token keyword">default</span>
loop<span class="token operator">:</span>      <span class="token keyword">for</span>    <span class="token keyword">do</span>    <span class="token keyword">while</span>
jump<span class="token operator">:</span>      <span class="token keyword">break</span>  <span class="token keyword">goto</span>  <span class="token keyword">return</span>  <span class="token keyword">continue</span> 

Functions<span class="token operator">:</span> <span class="token keyword">sizeof</span> <span class="token keyword">typedef</span> 
Type<span class="token operator">:</span>      <span class="token keyword">void</span>   <span class="token keyword">int</span>    <span class="token keyword">char</span>   <span class="token keyword">float</span>    <span class="token keyword">double</span> 
           <span class="token keyword">union</span>  <span class="token keyword">enum</span>   <span class="token class-name">struct</span>   
Modifiers<span class="token operator">:</span> <span class="token keyword">short</span>  <span class="token keyword">long</span>   <span class="token keyword">signed</span> <span class="token keyword">unsigned</span> 
           <span class="token keyword">const</span>  <span class="token keyword">static</span> <span class="token keyword">auto</span>   <span class="token keyword">register</span> <span class="token keyword">extern</span>  <span class="token keyword">volatile</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[t];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","C-0-base.html.vue"]]);export{k as default};
