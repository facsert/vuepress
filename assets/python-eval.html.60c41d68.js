import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as e}from"./app.38244e4c.js";const p={},t=e(`<h1 id="eval-exec" tabindex="-1"><a class="header-anchor" href="#eval-exec" aria-hidden="true">#</a> eval exec</h1><h2 id="eval" tabindex="-1"><a class="header-anchor" href="#eval" aria-hidden="true">#</a> eval</h2><h3 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h3><p>eval \u80FD\u8BC4\u4F30\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u8868\u8FBE\u5F0F, \u8FD4\u56DE\u8868\u8FBE\u5F0F\u7684\u503C</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code> <span class="token builtin">eval</span><span class="token punctuation">(</span>string<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token builtin">globals</span><span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token builtin">locals</span><span class="token punctuation">:</span><span class="token builtin">dict</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># \u540E\u4E24\u4E2A\u53C2\u6570\u7C7B\u578B\u4E3A\u5B57\u5178</span>
 <span class="token builtin">eval</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>                        <span class="token comment"># \u540E\u4E24\u4E2A\u9ED8\u8BA4\u53C2\u6570, \u9ED8\u8BA4\u503C\u4E3A None</span>

 a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
 <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;a + b&#39;</span><span class="token punctuation">)</span>                                   <span class="token comment"># \u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u8868\u8FBE\u5F0F</span>
 <span class="token operator">&gt;</span> <span class="token number">3</span>                                             <span class="token comment"># \u8FD4\u56DE\u8868\u8FBE\u5F0F\u7684\u6267\u884C\u7ED3\u679C</span>

 variable <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span>
 <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;abs(variable)&#39;</span><span class="token punctuation">)</span>                           <span class="token comment"># \u4F7F\u7528\u5185\u7F6E\u51FD\u6570</span>
 <span class="token operator">&gt;</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9650\u5B9A\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#\u9650\u5B9A\u8303\u56F4" aria-hidden="true">#</a> \u9650\u5B9A\u8303\u56F4</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code> <span class="token builtin">eval</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> local<span class="token punctuation">:</span><span class="token builtin">dict</span><span class="token punctuation">)</span>                  <span class="token comment"># \u6240\u6709\u5168\u5C40\u53D8\u91CF\u53EF\u7528, \u5C40\u90E8\u53D8\u91CF\u9650\u5B9A\u5B57\u5178\u5185</span>
 <span class="token builtin">eval</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token keyword">global</span><span class="token punctuation">:</span><span class="token builtin">dict</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>                 <span class="token comment"># \u6240\u6709\u5C40\u5185\u53D8\u91CF\u53EF\u7528, \u5168\u5C40\u53D8\u91CF\u9650\u5B9A\u5B57\u5178\u5185</span>

 glo_var <span class="token operator">=</span> <span class="token string">&#39;global variable&#39;</span>
 <span class="token keyword">def</span> <span class="token function">eval_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loc_val <span class="token operator">=</span> <span class="token string">&#39;local variable&#39;</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;print(glo_val + loc_val)&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>   <span class="token comment"># \u5168\u5C40\u53D8\u91CF\u53D7\u9650, \u65E0\u6CD5\u8BC6\u522B glo_var</span>
 <span class="token operator">&gt;</span> name <span class="token string">&#39;glo_val&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined

 glo_var <span class="token operator">=</span> <span class="token string">&#39;global variable&#39;</span>
 <span class="token keyword">def</span> <span class="token function">eval_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loc_val <span class="token operator">=</span> <span class="token string">&#39;local variable&#39;</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;print(glo_val + loc_val)&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment"># \u5C40\u5185\u53D8\u91CF\u53D7\u9650, \u65E0\u6CD5\u8BC6\u522B loc_val</span>
 <span class="token operator">&gt;</span> name <span class="token string">&#39;loc_val&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined

 glo_var <span class="token operator">=</span> <span class="token string">&#39;global variable&#39;</span>
 <span class="token keyword">def</span> <span class="token function">eval_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loc_val <span class="token operator">=</span> <span class="token string">&#39;local variable&#39;</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;print(glo_val + loc_val)&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token comment"># \u5C40\u5185\u53D8\u91CF, \u5168\u5C40\u53D8\u91CF\u5747\u53D7\u9650 </span>
 <span class="token operator">&gt;</span> name <span class="token string">&#39;loc_val&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined

 glo_var <span class="token operator">=</span> <span class="token string">&#39;global variable&#39;</span>
 <span class="token keyword">def</span> <span class="token function">eval_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loc_val <span class="token operator">=</span> <span class="token string">&#39;local variable&#39;</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;print(glo_val + loc_val)&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment"># \u53D8\u91CF\u53D6\u503C\u4E0D\u53D7\u9650\u5236, \u6B63\u5E38\u53D6\u503C  </span>
 <span class="token operator">&gt;</span> name <span class="token string">&#39;loc_val&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B89\u5168\u6027" tabindex="-1"><a class="header-anchor" href="#\u5B89\u5168\u6027" aria-hidden="true">#</a> \u5B89\u5168\u6027</h3><p>\u5168\u5C40\u53D8\u91CF\u5B58\u5728\u4E00\u4E2A\u5185\u7F6E\u547D\u540D\u7A7A\u95F4, \u5305\u542B\u5F88\u591A\u5E38\u7528\u51FD\u6570\u548C\u5C5E\u6027(\u65E0\u9700\u5BFC\u5165\u5373\u53EF\u4F7F\u7528)</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>
 <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;abs(a)&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>a<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                     <span class="token comment"># \u5168\u5C40\u53D8\u91CF\u548C\u5C40\u5185\u53D8\u91CF\u53EA\u63D0\u4F9B\u4E00\u4E2A\u53D8\u91CF, \u8FD8\u662F\u80FD\u8BC6\u522B abs \u51FD\u6570</span>
 <span class="token operator">&gt;</span> <span class="token number">3</span>

 <span class="token builtin">eval</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;__builtins__&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

 <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;abs(-3)&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;__builtins__&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>   <span class="token comment"># global \u9690\u5F0F\u643A\u5E26\u5185\u7F6E\u547D\u540D\u7A7A\u95F4, \u5FC5\u987B\u663E\u5F0F\u58F0\u660E, {} \u65E0\u6548</span>
 <span class="token operator">&gt;</span> <span class="token string">&#39;NoneType&#39;</span> <span class="token builtin">object</span> <span class="token keyword">is</span> <span class="token keyword">not</span> subscriptable

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8: \u907F\u514D\u5C06\u672A\u77E5\u5B57\u7B26\u8F6C\u6362\u4E3A\u4EE3\u7801, \u9700\u8981\u5C4F\u853D python \u5185\u7F6E\u51FD\u6570\u548C\u5C5E\u6027</p><h2 id="exec" tabindex="-1"><a class="header-anchor" href="#exec" aria-hidden="true">#</a> exec</h2><h3 id="\u4F7F\u7528-1" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-1" aria-hidden="true">#</a> \u4F7F\u7528</h3><p>exec \u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u4EE3\u7801\u5757, \u8FD4\u56DE\u503C\u4E3A None</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code> <span class="token keyword">exec</span><span class="token punctuation">(</span>string<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token builtin">globals</span><span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token builtin">locals</span><span class="token punctuation">:</span><span class="token builtin">dict</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># \u540E\u4E24\u4E2A\u53C2\u6570\u7C7B\u578B\u4E3A\u5B57\u5178</span>
 <span class="token keyword">exec</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>                        <span class="token comment"># \u540E\u4E24\u4E2A\u9ED8\u8BA4\u53C2\u6570, \u9ED8\u8BA4\u503C\u4E3A None</span>

 <span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token string">&#39;a = 2 + 3&#39;</span><span class="token punctuation">)</span>                               <span class="token comment"># \u4E0E\u6B63\u5E38\u6267\u884C\u8BED\u53E5\u4E00\u81F4</span>
 <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>                                        
 <span class="token operator">&gt;</span> <span class="token number">3</span>

 <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;a = 2 + 3&#39;</span><span class="token punctuation">)</span>                               <span class="token comment"># eval \u65E0\u6CD5\u6267\u884C\u8BED\u53E5</span>
         <span class="token operator">^</span>
 SyntaxError<span class="token punctuation">:</span> invalid syntax


 a <span class="token operator">=</span> <span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token string">&#39;2 + 3&#39;</span><span class="token punctuation">)</span>                               <span class="token comment"># exec \u4E5F\u53EF\u6267\u884C\u8868\u8FBE\u5F0F, \u4F46\u8FD4\u56DE\u503C\u4E3A None</span>
 <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>                                        
 <span class="token operator">&gt;</span> <span class="token boolean">None</span>

 a <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;2 + 3&#39;</span><span class="token punctuation">)</span>                               <span class="token comment"># eval \u80FD\u6B63\u5E38\u8FD4\u56DE\u8868\u8FBE\u5F0F\u7ED3\u679C</span>
 <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>                                        
 <span class="token operator">&gt;</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9650\u5B9A\u8303\u56F4-1" tabindex="-1"><a class="header-anchor" href="#\u9650\u5B9A\u8303\u56F4-1" aria-hidden="true">#</a> \u9650\u5B9A\u8303\u56F4</h3><p>\u4E0E eval \u4E00\u81F4</p><h3 id="\u5B89\u5168\u6027-1" tabindex="-1"><a class="header-anchor" href="#\u5B89\u5168\u6027-1" aria-hidden="true">#</a> \u5B89\u5168\u6027</h3><p>\u4E0E eval \u4E00\u81F4</p>`,19),o=[t];function l(c,i){return s(),a("div",null,o)}const k=n(p,[["render",l],["__file","python-eval.html.vue"]]);export{k as default};
