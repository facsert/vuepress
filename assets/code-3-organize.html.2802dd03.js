import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as s,a as e}from"./app.38244e4c.js";const t={},i=e(`<h1 id="\u7EC4\u7EC7\u4EE3\u7801\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u7EC7\u4EE3\u7801\u529F\u80FD" aria-hidden="true">#</a> \u7EC4\u7EC7\u4EE3\u7801\u529F\u80FD</h1><ul><li>\u6A21\u5757\u5316</li><li>\u5206\u79BB\u5DE5\u5177\u4EE3\u7801</li><li>\u5C11\u5199\u4EE3\u7801</li></ul><h2 id="\u6A21\u5757\u5316" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757\u5316" aria-hidden="true">#</a> \u6A21\u5757\u5316</h2><p>\u5206\u79BB\u76F8\u5173\u6027\u4E0D\u5927\u7684\u4EE3\u7801, \u4E00\u4E2A\u6A21\u5757\u505A\u4E00\u4EF6\u4E8B<br> \u6A21\u5757\u5316\u4F7F\u5F97\u4EE3\u7801\u6613\u4E8E\u6D4B\u8BD5\u548C\u6269\u5C55</p><h2 id="\u5C11\u5199\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5C11\u5199\u4EE3\u7801" aria-hidden="true">#</a> \u5C11\u5199\u4EE3\u7801</h2><p>\u4E0D\u8981\u91CD\u590D\u9020\u8F6E\u5B50, \u590D\u7528\u5DF2\u6709\u5B9E\u73B0</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>
<span class="token keyword">def</span> <span class="token function">unique_list</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token keyword">def</span> <span class="token function">sort_list_one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token keyword">def</span> <span class="token function">sort_list_two</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

unique_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>raw_list<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment"># \u4F7F\u7528\u96C6\u5408\u7684\u7279\u6027\u6D88\u9664\u91CD\u590D\u6570\u636E(\u96C6\u5408\u6BCF\u4E2A\u5143\u7D20\u552F\u4E00)</span>
sort_list <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>raw_list<span class="token punctuation">)</span>                     <span class="token comment"># \u4F7F\u7528\u5E93\u51FD\u6570\u6392\u5E8F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5206\u79BB\u5DE5\u5177\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5206\u79BB\u5DE5\u5177\u4EE3\u7801" aria-hidden="true">#</a> \u5206\u79BB\u5DE5\u5177\u4EE3\u7801</h2><p>\u62BD\u79BB\u4E0E\u7CFB\u7EDF\u65E0\u5173\u7684\u4EE3\u7801</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">compare_list_average</span><span class="token punctuation">(</span>list_a<span class="token punctuation">,</span> list_b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    
    a_sum<span class="token punctuation">,</span> a_length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>list_a<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> list_a<span class="token punctuation">:</span>
        a_sum <span class="token operator">+=</span> i
    a_average <span class="token operator">=</span> a_sum <span class="token operator">/</span> a_length

    b_sum<span class="token punctuation">,</span> b_length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>list_b<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> list_b<span class="token punctuation">:</span>
        b_sum <span class="token operator">+=</span> i
    b_average <span class="token operator">=</span> b_sum <span class="token operator">/</span> b_length

    <span class="token keyword">return</span> a_average <span class="token operator">&gt;</span> b_average


<span class="token keyword">def</span> <span class="token function">average</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">:</span>
    array_sum<span class="token punctuation">,</span> array_length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> array<span class="token punctuation">:</span>
        array_sum <span class="token operator">+=</span> i
    <span class="token keyword">return</span> array_sum <span class="token operator">/</span> array_length

<span class="token keyword">def</span> <span class="token function">compare_list_average</span><span class="token punctuation">(</span>list_a<span class="token punctuation">,</span> list_b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    a_average <span class="token operator">=</span> average<span class="token punctuation">(</span>list_a<span class="token punctuation">)</span>
    b_average <span class="token operator">=</span> average<span class="token punctuation">(</span>list_b<span class="token punctuation">)</span>
    <span class="token keyword">return</span> a_average <span class="token operator">&gt;</span> a_average
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u62D3\u5C55" tabindex="-1"><a class="header-anchor" href="#\u62D3\u5C55" aria-hidden="true">#</a> \u62D3\u5C55</h1><h2 id="\u51FD\u6570\u5F0F\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5F0F\u7F16\u7A0B" aria-hidden="true">#</a> \u51FD\u6570\u5F0F\u7F16\u7A0B</h2><p>\u7B80\u5355\u8BF4\uFF0C&quot;\u51FD\u6570\u5F0F\u7F16\u7A0B&quot;\u662F\u4E00\u79CD&quot;\u7F16\u7A0B\u8303\u5F0F&quot;\uFF08programming paradigm\uFF09\uFF0C\u4E5F\u5C31\u662F\u5982\u4F55\u7F16\u5199\u7A0B\u5E8F\u7684\u65B9\u6CD5\u8BBA \u5B83\u5C5E\u4E8E&quot;\u7ED3\u6784\u5316\u7F16\u7A0B&quot;\u7684\u4E00\u79CD\uFF0C\u4E3B\u8981\u601D\u60F3\u662F\u628A\u8FD0\u7B97\u8FC7\u7A0B\u5C3D\u91CF\u5199\u6210\u4E00\u7CFB\u5217\u5D4C\u5957\u7684\u51FD\u6570\u8C03\u7528</p><h3 id="\u53EA\u7528\u8868\u8FBE\u5F0F\u4E0D\u7528\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u53EA\u7528\u8868\u8FBE\u5F0F\u4E0D\u7528\u8BED\u53E5" aria-hidden="true">#</a> \u53EA\u7528\u8868\u8FBE\u5F0F\u4E0D\u7528\u8BED\u53E5</h3><p>\u6BCF\u4E00\u6B65\u90FD\u662F\u8BA1\u7B97, \u90FD\u6709\u8FD4\u56DE\u503C</p><h3 id="\u65E0\u526F\u4F5C\u7528-\u4E0D\u6539\u53D8\u5916\u90E8\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u65E0\u526F\u4F5C\u7528-\u4E0D\u6539\u53D8\u5916\u90E8\u53D8\u91CF" aria-hidden="true">#</a> \u65E0\u526F\u4F5C\u7528, \u4E0D\u6539\u53D8\u5916\u90E8\u53D8\u91CF</h3><p>\u4E0D\u6539\u53D8\u5916\u90E8\u53D8\u91CF\u6216\u72B6\u6001</p><h3 id="\u7EAF\u51FD\u6570-\u53C2\u6570\u4E0E\u8FD4\u56DE\u503C\u4E00\u4E00\u5BF9\u5E94" tabindex="-1"><a class="header-anchor" href="#\u7EAF\u51FD\u6570-\u53C2\u6570\u4E0E\u8FD4\u56DE\u503C\u4E00\u4E00\u5BF9\u5E94" aria-hidden="true">#</a> \u7EAF\u51FD\u6570, \u53C2\u6570\u4E0E\u8FD4\u56DE\u503C\u4E00\u4E00\u5BF9\u5E94</h3><p>\u76F8\u540C\u8F93\u5165\u8F93\u51FA\u5FC5\u5B9A\u76F8\u540C</p><h2 id="solid-\u539F\u5219" tabindex="-1"><a class="header-anchor" href="#solid-\u539F\u5219" aria-hidden="true">#</a> SOLID \u539F\u5219</h2><p>SOLID \u662F\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u5E94\u5F53\u9075\u5B88\u7684\u51C6\u5219\u548C\u6700\u4F73\u7684\u5B9E\u8DF5\u65B9\u5411</p><h3 id="srp-\u5355\u4E00\u804C\u8D23" tabindex="-1"><a class="header-anchor" href="#srp-\u5355\u4E00\u804C\u8D23" aria-hidden="true">#</a> SRP \u5355\u4E00\u804C\u8D23</h3><blockquote><p>Single Responsibility Principle There should never be more than one reason for a class to change</p></blockquote><h3 id="ocp-\u5F00\u95ED\u539F\u5219" tabindex="-1"><a class="header-anchor" href="#ocp-\u5F00\u95ED\u539F\u5219" aria-hidden="true">#</a> OCP \u5F00\u95ED\u539F\u5219</h3><p>\u539F\u59CB\u5B9A\u4E49:</p><blockquote><p>Open Closed Principle</p></blockquote><h3 id="lsp-\u91CC\u5F0F\u66FF\u6362\u539F\u5219" tabindex="-1"><a class="header-anchor" href="#lsp-\u91CC\u5F0F\u66FF\u6362\u539F\u5219" aria-hidden="true">#</a> LSP \u91CC\u5F0F\u66FF\u6362\u539F\u5219</h3><blockquote><p>Liskov Substitution Principle</p></blockquote><h3 id="isp-\u63A5\u53E3\u66FF\u6362\u539F\u5219" tabindex="-1"><a class="header-anchor" href="#isp-\u63A5\u53E3\u66FF\u6362\u539F\u5219" aria-hidden="true">#</a> ISP \u63A5\u53E3\u66FF\u6362\u539F\u5219</h3><blockquote><p>Interface Segregation Principle</p></blockquote><h3 id="dip-\u4F9D\u8D56\u5012\u7F6E\u539F\u5219" tabindex="-1"><a class="header-anchor" href="#dip-\u4F9D\u8D56\u5012\u7F6E\u539F\u5219" aria-hidden="true">#</a> DIP \u4F9D\u8D56\u5012\u7F6E\u539F\u5219</h3><blockquote><p>Dependency Inversion Principle</p></blockquote>`,32),p=[i];function o(l,c){return a(),s("div",null,p)}const u=n(t,[["render",o],["__file","code-3-organize.html.vue"]]);export{u as default};
