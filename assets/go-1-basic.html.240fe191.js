import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as t}from"./app.4fbe9141.js";const p={},e=t(`<ul><li><a href="#%E5%8F%98%E9%87%8F">\u53D8\u91CF</a></li><li><a href="#%E5%B8%B8%E9%87%8F">\u5E38\u91CF</a></li><li><a href="#%E6%89%93%E5%8D%B0">\u6253\u5370</a></li><li><a href="#%E6%95%B4%E5%BD%A2">\u6574\u5F62</a></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2">\u5B57\u7B26\u4E32</a></li><li><a href="#%E9%99%84%E5%BD%95">\u9644\u5F55</a></li></ul><h2 id="\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF" aria-hidden="true">#</a> \u53D8\u91CF</h2><ul><li>Go \u53D8\u91CF\u547D\u540D\u8981\u6C42\u4EE5\u5B57\u6BCD\u6216\u4E0B\u5212\u7EBF\u5F00\u5934</li><li>\u4E0D\u53EF\u4EE5\u4F7F\u7528 Go \u4E2D\u7684 25 <a href="#%E5%85%B3%E9%94%AE%E5%AD%97">\u5173\u952E\u5B57</a>\u53CA 37 \u4E2A<a href="#%E4%BF%9D%E7%95%99%E5%AD%97">\u4FDD\u7559\u5B57</a></li><li>\u53D8\u91CF\u8981\u6C42\u58F0\u660E\u7C7B\u578B\u4F7F\u7528\u7C7B\u578B\u63A8\u5BFC</li></ul><h3 id="\u53D8\u91CF\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u58F0\u660E" aria-hidden="true">#</a> \u53D8\u91CF\u58F0\u660E</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>
 <span class="token keyword">var</span> <span class="token operator">&lt;</span>variable name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">type</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>            <span class="token comment">// \u53D8\u91CF\u5B9A\u4E49, \u6700\u5B8C\u6574\u7684\u53D8\u91CF\u5B9A\u4E49</span>
 <span class="token keyword">var</span> age <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">18</span>                                <span class="token comment">// \u58F0\u660E\u53D8\u91CF\u7C7B\u578B\u5E76\u8D4B\u503C</span>

 <span class="token keyword">var</span> <span class="token operator">&lt;</span>variable name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">type</span><span class="token operator">&gt;</span>                      <span class="token comment">// \u53D8\u91CF\u5B9A\u4E49, \u53EA\u5B9A\u4E49\u53D8\u91CF\u540D\u548C\u7C7B\u578B, \u53D8\u91CF\u9ED8\u8BA4\u4E3A\u5BF9\u5E94\u7C7B\u578B\u7684\u521D\u59CB\u503C</span>
 <span class="token keyword">var</span> str <span class="token builtin">string</span>                                  <span class="token comment">// \u58F0\u660E\u53D8\u91CF\u548C\u7C7B\u578B, \u672A\u8D4B\u503C\u4F7F\u7528\u9ED8\u8BA4\u503C(string \u9ED8\u8BA4\u503C &quot;&quot;)</span>

 <span class="token keyword">var</span> <span class="token operator">&lt;</span><span class="token keyword">type</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>                            <span class="token comment">// \u53D8\u91CF\u5B9A\u4E49, \u901A\u8FC7\u503C\u81EA\u52A8\u63A8\u5BFC\u53D8\u91CF\u7C7B\u578B</span>
 <span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">18</span>                                    <span class="token comment">// \u58F0\u660E\u53D8\u91CF, \u8D4B\u503C, \u5E76\u4F7F\u7528\u7C7B\u578B\u63A8\u5BFC</span>

 <span class="token operator">&lt;</span>variable name<span class="token operator">&gt;</span> <span class="token operator">:=</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>                      <span class="token comment">// \u53D8\u91CF\u5B9A\u4E49, \u901A\u8FC7\u503C\u81EA\u52A8\u63A8\u5BFC\u7C7B\u578B, \u4EC5\u80FD\u5728\u51FD\u6570\u5185\u90E8\u4F7F\u7528</span>
 name <span class="token operator">:=</span> <span class="token string">&quot;str&quot;</span>                                   <span class="token comment">// \u58F0\u660E\u53D8\u91CF, \u8D4B\u503C, \u5E76\u4F7F\u7528\u7C7B\u578B\u63A8\u5BFC(\u4EC5\u9650\u4E8E\u51FD\u6570\u5185\u4F7F\u7528)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u533F\u540D\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u533F\u540D\u53D8\u91CF" aria-hidden="true">#</a> \u533F\u540D\u53D8\u91CF</h3><p>\u6CE8: Go \u4E2D\u5B58\u5728<strong>\u672A\u88AB\u4F7F\u7528</strong>\u7684\u53D8\u91CF\u4F1A\u62A5\u9519, \u9700\u8981\u5C06\u5176\u8D4B\u503C\u7ED9\u533F\u540D\u53D8\u91CF &quot;_&quot; \u624D\u80FD\u6B63\u5E38\u8FD0\u884C</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">var</span> name <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;facser&quot;</span>
 fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>
 <span class="token operator">&gt;</span> <span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span> name declared but not used    <span class="token comment">// \u53D8\u91CF name \u672A\u4F7F\u7528, \u62A5\u9519</span>

 name<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token string">&quot;facser&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;variable&quot;</span>                 <span class="token comment">// \u4F7F\u7528\u533F\u540D\u53D8\u91CF, \u5FFD\u7565 foo() \u4E2D\u4E00\u4E2A\u8FD4\u56DE\u503C </span>
 fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;hello &quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
 <span class="token operator">&gt;</span> hello  facser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5E38\u91CF" aria-hidden="true">#</a> \u5E38\u91CF</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">const</span> e <span class="token operator">=</span> <span class="token number">2.7182</span>                                <span class="token comment">// \u5E38\u91CF\u58F0\u660E\u5FC5\u987B\u8981\u8D4B\u503C, \u4E14\u4E0D\u53EF\u66F4\u6539</span>

 <span class="token keyword">const</span> <span class="token punctuation">(</span>                                         <span class="token comment">// \u5FEB\u901F\u58F0\u660E\u5E38\u91CF, a b c \u8D4B\u503C 10</span>
    a <span class="token operator">=</span> <span class="token number">10</span>                                       <span class="token comment">// a = 10</span>
    b                                            <span class="token comment">// a = 10</span>
    c <span class="token operator">=</span> <span class="token number">5</span>                                        <span class="token comment">// a = 5</span>
    d                                            <span class="token comment">// a = 5</span>
 <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iota" tabindex="-1"><a class="header-anchor" href="#iota" aria-hidden="true">#</a> iota</h3><p>iota \u662F\u5B9A\u4E49\u5E38\u91CF\u65F6\u4F7F\u7528\u7684\u81EA\u589E\u5173\u952E\u5B57 \u540C const \u5B9A\u4E49\u5757\u4E92\u4E0D\u5E72\u6270, \u6240\u6709\u6CE8\u91CA\u884C\u548C\u7A7A\u884C\u5168\u90E8\u5FFD\u7565 \u4ECE\u7B2C 1 \u884C\u5F00\u59CB\uFF0Ciota \u4ECE 0 \u9010\u884C\u52A0 1</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">const</span> <span class="token punctuation">(</span>
    a <span class="token operator">=</span> <span class="token boolean">iota</span>                                     <span class="token comment">// iota = 0  a = 0</span>
    b                                            <span class="token comment">// iota = 1  b = 1</span>
    c                                            <span class="token comment">// iota = 2  c = 2</span>
 <span class="token punctuation">)</span>

 <span class="token keyword">const</span> <span class="token punctuation">(</span>                                         <span class="token comment">// \u53D8\u66F4\u521D\u59CB\u503C</span>
    a <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token operator">+</span> <span class="token number">3</span>                                 <span class="token comment">// iota = 0  a = 3</span>
    b                                            <span class="token comment">// iota = 1  b = 4</span>
    c <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token operator">+</span> <span class="token number">2</span>                                 <span class="token comment">// iota = 2  c = 4</span>
    d                                            <span class="token comment">// iota = 3  d = 5</span>
 <span class="token punctuation">)</span>

 <span class="token keyword">const</span> <span class="token punctuation">(</span>                                         <span class="token comment">// iota \u63D2\u503C</span>
    a <span class="token operator">=</span> <span class="token boolean">iota</span>                                     <span class="token comment">// iota = 0  a = 0</span>
    b <span class="token operator">=</span> <span class="token number">5</span>                                        <span class="token comment">// iota = 1  b = 5</span>
    c <span class="token operator">=</span> <span class="token boolean">iota</span>                                     <span class="token comment">// iota = 2  c = 2</span>
    d                                            <span class="token comment">// iota = 3  d = 3</span>
 <span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6253\u5370" tabindex="-1"><a class="header-anchor" href="#\u6253\u5370" aria-hidden="true">#</a> \u6253\u5370</h2><p>\u901A\u8FC7\u5360\u4F4D\u7B26\u66FF\u6362\u503C\u6253\u5370</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>str<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">int</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">bool</span><span class="token operator">&gt;</span> <span class="token operator">...</span><span class="token punctuation">)</span>  <span class="token comment">// \u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5B57\u7B26\u4E32,\u540E\u63A5\u4EFB\u610F\u7C7B\u578B\u503C, \u5360\u4F4D\u7B26\u9700\u4E0E\u503C\u6570\u91CF\u5BF9\u5E94 </span>

 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;common: %v \\n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;common&quot;</span><span class="token punctuation">)</span>           <span class="token comment">// \u4E07\u80FD\u5360\u7528\u7B26, \u81EA\u52A8\u5224\u65AD\u7C7B\u578B</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;string: %s \\n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span>           <span class="token comment">// \u5B57\u7B26\u4E32\u53D8\u91CF\u5360\u4F4D\u7B26</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;char  : %c \\n&quot;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">)</span>                <span class="token comment">// \u5355\u4E2A\u5B57\u7B26\u53D8\u91CF\u5360\u4F4D\u7B26, \u5355\u4E2A\u5B57\u7B26\u7528\u5355\u5F15\u53F7</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;number: %d \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>                  <span class="token comment">// \u6574\u5F62\u53D8\u91CF\u5360\u4F4D\u7B26 </span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;float : %f \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">2.33</span><span class="token punctuation">)</span>               <span class="token comment">// \u6D6E\u70B9\u578B\u53D8\u91CF\u5360\u4F4D\u7B26</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;bool  : %t \\n&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>               <span class="token comment">// \u5E03\u5C14\u503C\u53D8\u91CF\u5360\u4F4D\u7B26</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;point : %p \\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>variable<span class="token punctuation">)</span>          <span class="token comment">// \u6307\u9488\u53D8\u91CF\u5360\u4F4D\u7B26</span>

 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;variable type: %T \\n&quot;</span><span class="token punctuation">,</span> variable<span class="token punctuation">)</span>    <span class="token comment">// \u53D8\u91CF\u7C7B\u578B\u5360\u4F4D\u7B26</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6574\u5F62" tabindex="-1"><a class="header-anchor" href="#\u6574\u5F62" aria-hidden="true">#</a> \u6574\u5F62</h2><table><thead><tr><th style="text-align:left;">\u7C7B\u578B</th><th style="text-align:left;">\u8303\u56F4</th></tr></thead><tbody><tr><td style="text-align:left;"><code>int8</code></td><td style="text-align:left;">-128 - 127</td></tr><tr><td style="text-align:left;"><code>uint8</code> / <code>byte</code></td><td style="text-align:left;">0 - 255</td></tr><tr><td style="text-align:left;"><code>int16</code></td><td style="text-align:left;">-32768 - 32767</td></tr><tr><td style="text-align:left;"><code>uint16</code></td><td style="text-align:left;">0 - 65535</td></tr><tr><td style="text-align:left;"><code>int32</code> / <code>rune</code></td><td style="text-align:left;">-2147483648 ~ 2147483647</td></tr><tr><td style="text-align:left;"><code>uint32</code></td><td style="text-align:left;">0 ~ 4294967295</td></tr><tr><td style="text-align:left;"><code>int64</code></td><td style="text-align:left;">-9223372036854775808 ~ 9223372036854775807</td></tr><tr><td style="text-align:left;"><code>uint64</code></td><td style="text-align:left;">0 ~ 18446744073709551615</td></tr><tr><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">32 \u4F4D\u7CFB\u7EDF int32\uFF0C 64 \u4F4D\u7CFB\u7EDF int64</td></tr><tr><td style="text-align:left;"><code>uint</code></td><td style="text-align:left;">32 \u4F4D\u7CFB\u7EDF uint32\uFF0C 64 \u4F4D\u7CFB\u7EDF uint64</td></tr></tbody></table><h3 id="\u6574\u5F62\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u6574\u5F62\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u6574\u5F62\u7C7B\u578B\u8F6C\u6362</h3><p>\u6570\u5B57\u7C7B\u578B\u6570\u636E\u53EF\u4EE5\u901A\u8FC7 <code>&lt;type&gt;()</code> \u65B9\u5F0F\u8FDB\u884C\u7C7B\u578B\u4E4B\u95F4\u7684\u8F6C\u6362</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">var</span> num <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">8</span>                                 <span class="token comment">// int   num = 8</span>
 num8 <span class="token operator">:=</span> <span class="token function">int8</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>                               <span class="token comment">// int8  num8 = 8</span>
 num16 <span class="token operator">:=</span> <span class="token function">int16</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>                             <span class="token comment">// int16 num16 = 8</span>
 num32 <span class="token operator">:=</span> <span class="token function">int32</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>                             <span class="token comment">// int32 num32 = 8</span>
 num64 <span class="token operator">:=</span> <span class="token function">int64</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>                             <span class="token comment">// int64 num64 = 8</span>

 numFloat32 <span class="token operator">:=</span> <span class="token function">float32</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>                      <span class="token comment">// float32 numFloat32 = 8</span>
 numFloat64 <span class="token operator">:=</span> <span class="token function">float32</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>                      <span class="token comment">// float64 numFloat64 = 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FDB\u5236\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u5236\u8D4B\u503C" aria-hidden="true">#</a> \u8FDB\u5236\u8D4B\u503C</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> binary <span class="token operator">:=</span> <span class="token number">0b11</span>                                  <span class="token comment">// int binary      = 3   2 \u8FDB\u5236\u8D4B\u503C </span>
 octal <span class="token operator">:=</span> <span class="token number">0o11</span>                                   <span class="token comment">// int octal       = 9   8 \u8FDB\u5236\u8D4B\u503C </span>
 hexadecimal <span class="token operator">:=</span> <span class="token number">0x11</span>                             <span class="token comment">// int hexadecimal = 17  16 \u8FDB\u5236\u8D4B\u503C </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h2><p>Golang \u5B57\u7B26\u4E32\u672C\u8D28\u662F\u5355\u4E2A\u5B57\u7B26\u7684\u96C6\u5408, \u5355\u4E2A\u5B57\u7B26\u7684\u672C\u8D28\u662F\u6570\u5B57, \u901A\u8FC7\u4E0D\u540C\u89C4\u8303\u548C\u5B57\u7B26\u5BF9\u5E94(ACSII \u548C Unicode)</p><p>byte(uint8) ACSII \u8868\u4E2D\u7684\u4E00\u4E2A\u5B57\u7B26, \u5E95\u5C42\u662F\u4E00\u4E2A 0-255 \u6570\u5B57(\u6570\u5B57\u4E0E ACSII \u8868\u5B57\u7B26\u7ED1\u5B9A) rune(int32) Unicode \u7F16\u7801\u4E2D\u7684\u4E00\u4E2A\u5B57\u7B26(\u5305\u542B\u4E16\u754C\u5927\u90E8\u5206\u8BED\u8A00\u5B57\u7B26), Unicode \u8868\u5305\u542B ACSII \u8868</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">var</span> a <span class="token builtin">byte</span> <span class="token operator">=</span> <span class="token char">&#39;D&#39;</span>                                 <span class="token comment">// &#39;D&#39; \u5728 ACSII \u4E2D\u7B2C 68 \u4F4D</span>
 <span class="token keyword">var</span> c <span class="token builtin">byte</span> <span class="token operator">=</span> <span class="token number">68</span>                                  <span class="token comment">// ACSII \u4E2D 68 \u4E3A &#39;D&#39;, \u4E24\u79CD\u8D4B\u503C\u7B49\u4EF7</span>

 <span class="token keyword">var</span> a <span class="token builtin">rune</span> <span class="token operator">=</span> <span class="token char">&#39;\u4E2D&#39;</span>                                <span class="token comment">// &#39;\u4E2D&#39; \u5728 Unicode \u4E2D\u7B2C 20013 \u4F4D</span>
 <span class="token keyword">var</span> c <span class="token builtin">rune</span> <span class="token operator">=</span> <span class="token number">20013</span>                               <span class="token comment">// Unicode \u4E2D 20013 \u4E3A &#39;\u4E2D&#39;, \u4E24\u79CD\u8D4B\u503C\u7B49\u4EF7</span>
 
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a equal c: %v\\n&quot;</span><span class="token punctuation">,</span> a <span class="token operator">==</span> c<span class="token punctuation">)</span>
 <span class="token operator">&gt;</span> a equal c<span class="token punctuation">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">var</span> acsii<span class="token punctuation">,</span> unicode <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;str&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4E2D\u6587&quot;</span>
 <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> char <span class="token operator">:=</span> <span class="token keyword">range</span> acsii <span class="token punctuation">{</span>
     fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Type: %T, value: %v, value: %c\\n&quot;</span><span class="token punctuation">,</span> char<span class="token punctuation">,</span> char<span class="token punctuation">,</span> char<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">int32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token number">115</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> s
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">int32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token number">116</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> t
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">int32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token number">114</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> r
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">int32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token number">20013</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> \u4E2D
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">int32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token number">25991</span><span class="token punctuation">,</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> \u6587

<span class="token comment">// \u904D\u5386\u5B57\u7B26\u4E32, \u5355\u4E2A\u5B57\u7B26\u7C7B\u578B\u4E3A int32(rune)</span>
<span class="token comment">// \u9ED8\u8BA4\u4F7F\u7528 unicode \u89C4\u8303, \u5B57\u7B26\u5E95\u5C42\u662F\u6570\u5B57, \u4E0E Unicode \u5B57\u7B26\u5173\u8054</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> slice<span class="token punctuation">,</span> list <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;str&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E2D\u6587&quot;</span><span class="token punctuation">)</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Type: %T, value: %v\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> slice<span class="token punctuation">)</span>
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint8</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">}</span><span class="token comment">// \u5B57\u7B26\u4E32\u8F6C byte</span>
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int32</span><span class="token punctuation">{</span><span class="token number">20013</span><span class="token punctuation">,</span> <span class="token number">25991</span><span class="token punctuation">}</span>   <span class="token comment">// \u5B57\u7B26\u4E32\u8F6C rune</span>

 <span class="token keyword">var</span> strByte <span class="token builtin">byte</span> <span class="token operator">=</span> <span class="token char">&#39;D&#39;</span>
 <span class="token keyword">var</span> strRune <span class="token builtin">rune</span> <span class="token operator">=</span> <span class="token char">&#39;\u6587&#39;</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Type: %T, value: %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>strByte<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>strByte<span class="token punctuation">)</span><span class="token punctuation">)</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Type: %T, value: %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>strRune<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>strRune<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> D                        <span class="token comment">// byte \u8F6C string</span>
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> \u6587                       <span class="token comment">// rune \u8F6C string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">var</span> num <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">68</span>
 <span class="token keyword">var</span> num8 <span class="token builtin">int8</span> <span class="token operator">=</span> <span class="token number">66</span>
 <span class="token keyword">var</span> num16 <span class="token builtin">int16</span> <span class="token operator">=</span> <span class="token number">66</span>
 <span class="token keyword">var</span> num32 <span class="token builtin">int32</span> <span class="token operator">=</span> <span class="token number">25991</span>
 <span class="token keyword">var</span> num64 <span class="token builtin">int64</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Type %T, value: %v\\n&quot;</span><span class="token punctuation">,</span> num<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span>

 <span class="token operator">&gt;</span> Type <span class="token builtin">int</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> D                          
 <span class="token operator">&gt;</span> Type <span class="token builtin">int8</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> B
 <span class="token operator">&gt;</span> Type <span class="token builtin">int16</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> B
 <span class="token operator">&gt;</span> Type <span class="token builtin">int32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> \u6587                          <span class="token comment">// \u4EFB\u610F unicode \u8303\u56F4\u5185\u975E\u8D1F\u6570\u53EF\u4EE5\u901A\u8FC7\u5185\u7F6E\u51FD\u6570 string() \u8F6C\u6362\u4E3A\u5BF9\u5E94\u5B57\u7B26</span>
 <span class="token operator">&gt;</span> Type <span class="token builtin">int64</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> \uFFFD                          <span class="token comment">// \u6240\u6709\u8D1F\u6570\u8F6C\u5316\u540E\u663E\u793A\u4E00\u81F4, \u672A\u80FD\u67E5\u8BE2\u5230\u76F8\u5173\u89E3\u91CA</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B57\u7B26\u4E32\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u64CD\u4F5C" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u64CD\u4F5C</h3><p>\u5B57\u7B26\u4E32\u5B9A\u4E49\u540E\u53EF\u4EE5\u67E5\u770B\u4F46\u4E0D\u53EF\u66F4\u6539</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> str <span class="token operator">:=</span> <span class="token string">&quot;learning&quot;</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Type: %T value: %c golang: %v\\n&quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> str<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> str<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">uint8</span> value<span class="token punctuation">:</span> e golang<span class="token punctuation">:</span> <span class="token number">97</span>

 str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;m&quot;</span>
 <span class="token operator">&gt;</span> <span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">37</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span> cannot assign to str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>value of <span class="token keyword">type</span> <span class="token builtin">byte</span><span class="token punctuation">)</span>

 uStr <span class="token operator">:=</span> <span class="token string">&quot;\u4E2D\u6587&quot;</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Type: %T value: %v length: %v\\n&quot;</span><span class="token punctuation">,</span> uStr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> uStr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>uStr<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token operator">&gt;</span> Type<span class="token punctuation">:</span> <span class="token builtin">uint8</span> value<span class="token punctuation">:</span> <span class="token number">184</span> length<span class="token punctuation">:</span> <span class="token number">6</span>

 strRune <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>uStr<span class="token punctuation">)</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;value: %#v length: %v\\n&quot;</span><span class="token punctuation">,</span> strRune<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>strRune<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token operator">&gt;</span> value<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int32</span><span class="token punctuation">{</span><span class="token number">20013</span><span class="token punctuation">,</span> <span class="token number">25991</span><span class="token punctuation">}</span> length<span class="token punctuation">:</span> <span class="token number">2</span>

 <span class="token comment">// \u5355\u4E2A\u82F1\u6587\u5B57\u6BCD 1 \u4E2A byte\u53EF\u4EE5\u8868\u793A, len() \u8FD4\u56DE\u5B57\u8282\u6570, \u4E00\u4E2A\u5B57\u6BCD\u5360\u7528 1 \u4E2A\u5B57\u8282</span>
 <span class="token comment">// \u5355\u4E2A\u4E2D\u6587\u5B57\u7B26\u7531 3 \u4E2A byte \u6216 1 \u4E2A rune \u8868\u793A, len() \u8FD4\u56DE\u5B57\u8282\u6570, \u4E00\u4E2A\u5B57\u7B26\u5305\u542B 3 \u4E2A\u5B57\u8282</span>
 <span class="token comment">// \u4EE5 byte \u533A\u5206, \u5355\u4E2A\u4E2D\u6587\u5B57\u7B26\u957F\u5EA6\u4E3A 3, \u5355\u4E2A\u5B57\u6BCD\u957F\u5EA6\u4E3A 1</span>
 <span class="token comment">// \u901A\u8FC7\u5E8F\u53F7\u53D6\u7684\u5355\u4E2A\u5B57\u7B26\u4E3A byte(str[index]), \u901A\u8FC7 range \u53D6\u51FA\u7684\u5355\u4E2A\u5B57\u7B26\u4E3A rune(for _, s := range str)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> strings<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> sep<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>                  <span class="token comment">// \u4EE5 sep \u4E3A\u5206\u9694\u7B26, \u5207\u5272\u5B57\u7B26\u4E32\u6210\u5207\u7247</span>
 strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> sub<span class="token punctuation">)</span> <span class="token builtin">bool</span>                   <span class="token comment">// \u5224\u65AD s \u662F\u5426\u5305\u542B sub</span>
 strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> sub<span class="token punctuation">)</span> <span class="token builtin">int</span>                       <span class="token comment">// sub \u5728 s \u7684\u5E8F\u53F7</span>
 strings<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> sep<span class="token punctuation">)</span> <span class="token builtin">string</span>                 <span class="token comment">// \u901A\u8FC7 sep \u628A slice \u8FDE\u63A5\u6210\u4E00\u4E2A\u5B57\u7B26\u4E32</span>
 strings<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> old<span class="token punctuation">,</span> <span class="token builtin">new</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span> <span class="token builtin">string</span>      <span class="token comment">// \u5C06 s \u4E2D\u7684 old \u66FF\u6362\u4E3A new, \u66FF\u6362 count \u6B21</span>
 strings<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> sub<span class="token punctuation">)</span> <span class="token builtin">int</span>                       <span class="token comment">// \u8FD4\u56DE sub \u5728 s \u4E2D\u51FA\u73B0\u6B21\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5E03\u5C14\u503C" tabindex="-1"><a class="header-anchor" href="#\u5E03\u5C14\u503C" aria-hidden="true">#</a> \u5E03\u5C14\u503C</h2><p>\u5E03\u5C14\u503C: true, false</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> love<span class="token punctuation">,</span> happy <span class="token operator">:=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span>
 
 <span class="token operator">!</span>love                                           <span class="token comment">// false  not love is false</span>
 love <span class="token operator">==</span> happy                                   <span class="token comment">// false  love equal happy is false </span>
 love <span class="token operator">!=</span> happy                                   <span class="token comment">// true   love not equal happy</span>
 happy <span class="token operator">&amp;&amp;</span> love                                   <span class="token comment">// false  love and happy is not true</span>
 happy <span class="token operator">||</span> love                                   <span class="token comment">// true   love or happy is true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E03\u5C14\u7C7B\u578B\u7684\u503C\u9ED8\u8BA4\u503C\u662F false \u5E03\u5C14\u503C\u65E0\u6CD5\u53C2\u6570\u6570\u503C\u8FD0\u7B97, \u53EA\u80FD\u8FDB\u884C\u903B\u8F91\u8FD0\u7B97 \u5E03\u5C14\u503C\u53EA\u80FD\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32, \u65E0\u6CD5\u8F6C\u6362\u4E3A\u5176\u5B83\u7C7B\u578B</p><h2 id="\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u7C7B\u578B\u8F6C\u6362</h2><p>\u4EFB\u610F\u7C7B\u578B\u6570\u636E\u90FD\u53EF\u4EE5\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>s <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprinf</span><span class="token punctuation">(</span><span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>variable<span class="token operator">&gt;</span><span class="token punctuation">)</span>                <span class="token comment">// \u4E07\u80FD\u8F6C\u6362, any -&gt; string</span>

s <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>                            <span class="token comment">// int -&gt; string</span>
s <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatBool</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                    <span class="token comment">// bool -&gt; string</span>
s <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatFloat</span><span class="token punctuation">(</span><span class="token number">3.1415</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>    <span class="token comment">// float64 -&gt; string</span>
s <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                  <span class="token comment">// int64 -&gt; string</span>
s <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatUint</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                  <span class="token comment">// uint63 -&gt; string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B57\u7B26\u4E32\u8F6C\u5176\u5B83\u7C7B\u578B\u53EF\u80FD\u4F1A\u5931\u8D25, \u8F6C\u6570\u5B57\u65F6\u8FD8\u9700\u8003\u8651\u8FDB\u5236\u548C\u7C7B\u578B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> i<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span><span class="token string">&quot;-42&quot;</span><span class="token punctuation">)</span>                   <span class="token comment">// string -&gt; int</span>
 b<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseBool</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>             <span class="token comment">// string -&gt; bool</span>
 f<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;3.1415&quot;</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>      <span class="token comment">// string -&gt; float64</span>
 i<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseInt</span><span class="token punctuation">(</span><span class="token string">&quot;-42&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>       <span class="token comment">// string -&gt; int64</span>
 u<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseUint</span><span class="token punctuation">(</span><span class="token string">&quot;42&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span>       <span class="token comment">// string -&gt; uint32</span>

<span class="token comment">// ParseFloat (str, bitSize)  bitSize:{32:float32, 64:float64}</span>

<span class="token comment">// ParseInt  ParseUint (str, base, bitSize)</span>
<span class="token comment">// str string: \u5F85\u8F6C\u6362\u7684\u5B57\u7B26\u4E32</span>
<span class="token comment">// base int: str \u7684\u8FDB\u5236( base=16, s \u4E3A 16 \u8FDB\u5236\u7684\u5B57\u7B26\u4E32)</span>
<span class="token comment">// bitSize int: {0:int, 8:int8, 16:int16, 32:int32, 64:int64}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9644\u5F55" tabindex="-1"><a class="header-anchor" href="#\u9644\u5F55" aria-hidden="true">#</a> \u9644\u5F55</h2><h3 id="\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5173\u952E\u5B57" aria-hidden="true">#</a> \u5173\u952E\u5B57</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>   <span class="token keyword">break</span>        <span class="token keyword">default</span>      <span class="token keyword">func</span>         <span class="token keyword">interface</span>    <span class="token keyword">select</span>
   <span class="token keyword">case</span>         <span class="token keyword">defer</span>        <span class="token keyword">go</span>           <span class="token keyword">map</span>          <span class="token keyword">struct</span>
   <span class="token keyword">chan</span>         <span class="token keyword">else</span>         <span class="token keyword">goto</span>         <span class="token keyword">package</span>      <span class="token keyword">switch</span>
   <span class="token keyword">const</span>        <span class="token keyword">fallthrough</span>  <span class="token keyword">if</span>           <span class="token keyword">range</span>        <span class="token keyword">type</span>
   <span class="token keyword">continue</span>     <span class="token keyword">for</span>          <span class="token keyword">import</span>       retrun       <span class="token keyword">var</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FDD\u7559\u5B57" tabindex="-1"><a class="header-anchor" href="#\u4FDD\u7559\u5B57" aria-hidden="true">#</a> \u4FDD\u7559\u5B57</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>    Constants<span class="token punctuation">:</span>    <span class="token boolean">true</span>  <span class="token boolean">false</span>  <span class="token boolean">iota</span>  <span class="token boolean">nil</span>

        Types<span class="token punctuation">:</span>    <span class="token builtin">int</span>  <span class="token builtin">int8</span>  <span class="token builtin">int16</span>  <span class="token builtin">int32</span>  <span class="token builtin">int64</span>  
                  <span class="token builtin">uint</span>  <span class="token builtin">uint8</span>  <span class="token builtin">uint16</span>  <span class="token builtin">uint32</span>  <span class="token builtin">uint64</span>  <span class="token builtin">uintptr</span>
                  <span class="token builtin">float32</span>  <span class="token builtin">float64</span>  <span class="token builtin">complex128</span>  <span class="token builtin">complex64</span>
                  <span class="token builtin">bool</span>  <span class="token builtin">byte</span>  <span class="token builtin">rune</span>  <span class="token builtin">string</span>  <span class="token builtin">error</span>

    Functions<span class="token punctuation">:</span>   <span class="token builtin">make</span>  <span class="token builtin">len</span>  <span class="token builtin">cap</span>  <span class="token builtin">new</span>  <span class="token builtin">append</span>  <span class="token builtin">copy</span>  <span class="token builtin">close</span>  <span class="token builtin">delete</span>
                 <span class="token builtin">complex</span>  <span class="token builtin">real</span>  <span class="token builtin">imag</span>
                 <span class="token builtin">panic</span>  <span class="token builtin">recover</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","go-1-basic.html.vue"]]);export{k as default};
