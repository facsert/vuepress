const n=JSON.parse('{"key":"v-2b672972","path":"/Go/tutorial/go-4.html","title":"Go 流程控制","lang":"en-US","frontmatter":{"title":"Go 流程控制","description":"if else 分支 if expression { branch } else if expression { branch } else { branch } done := false if done { Println(\\"done, goodbye\\") } else { Println(\\"not done, continue\\") } if done := true; done { Println(\\"done, goodbye\\") } else { Println(\\"not done, continue\\") }","date":"2023-04-19T19:21:24.000Z","category":["Go 教程"],"tag":["Go"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/Go/tutorial/go-4.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"Go 流程控制"}],["meta",{"property":"og:description","content":"if else 分支 if expression { branch } else if expression { branch } else { branch } done := false if done { Println(\\"done, goodbye\\") } else { Println(\\"not done, continue\\") } if done := true; done { Println(\\"done, goodbye\\") } else { Println(\\"not done, continue\\") }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2023-04-19T19:21:24.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go 流程控制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-19T19:21:24.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"if else 分支","slug":"if-else-分支","link":"#if-else-分支","children":[]},{"level":2,"title":"for 循环","slug":"for-循环","link":"#for-循环","children":[{"level":3,"title":"for range","slug":"for-range","link":"#for-range","children":[]},{"level":3,"title":"continue","slug":"continue","link":"#continue","children":[]},{"level":3,"title":"break","slug":"break","link":"#break","children":[]},{"level":3,"title":"goto","slug":"goto","link":"#goto","children":[]}]},{"level":2,"title":"switch case","slug":"switch-case","link":"#switch-case","children":[]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":1.76,"words":528},"filePathRelative":"Go/tutorial/go-4.md","localizedDate":"April 19, 2023","excerpt":"<h2> if else 分支</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code> <span class=\\"token keyword\\">if</span> expression <span class=\\"token punctuation\\">{</span>\\n     branch\\n <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> expression <span class=\\"token punctuation\\">{</span>\\n     branch\\n <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    branch\\n <span class=\\"token punctuation\\">}</span>\\n \\n done <span class=\\"token operator\\">:=</span> <span class=\\"token boolean\\">false</span>\\n <span class=\\"token keyword\\">if</span> done <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"done, goodbye\\"</span><span class=\\"token punctuation\\">)</span>\\n <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"not done, continue\\"</span><span class=\\"token punctuation\\">)</span>\\n <span class=\\"token punctuation\\">}</span>\\n\\n <span class=\\"token keyword\\">if</span> done <span class=\\"token operator\\">:=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span> done <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"done, goodbye\\"</span><span class=\\"token punctuation\\">)</span>\\n <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"not done, continue\\"</span><span class=\\"token punctuation\\">)</span>\\n <span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
