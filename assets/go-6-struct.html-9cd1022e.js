const t=JSON.parse('{"key":"v-1a85ceab","path":"/Go/tutorial/go-6-struct.html","title":"Go 结构体","lang":"en-US","frontmatter":{"title":"Go 结构体","description":"Struct struct 初始化 type &lt;struct name&gt; struct { // 定义结构体, 结构体可以认为是自定义的数据类型 &lt;attribute name&gt; &lt;type&gt; // 定义结构体属性及其类型 &lt;attribute name&gt; &lt;type&gt; // 每个属性名唯一, 不能重复 ... } type Student struct { // 定义 Student 类型数据 name, city string // Student 类型有 name city 属性, 属性值为 string age int // Student 类型有 age 属性, 属性类型为 int } var kertory Student // 初始化 Student 类型变量 kertory kertory.name = \\"kertory\\" // 使用 . 赋值 kertory.age = 18 facsert := Student{ // 初始化 Student 类型变量 facsert name: \\"facsert\\", city: \\"shanghai\\", } Printf(\\"%#v\\\\n\\", kertory) Printf(\\"%#v\\\\n\\", facsert) &gt; main.Student{name:\\"kertory\\", city:\\"\\", age:18} // 未初始化的属性使用类型的零值 &gt; main.Student{name:\\"facsert\\", city:\\"shanghai\\", age:0}","date":"2023-04-19T19:26:24.000Z","category":["Go 教程"],"tag":["Go"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/Go/tutorial/go-6-struct.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"Go 结构体"}],["meta",{"property":"og:description","content":"Struct struct 初始化 type &lt;struct name&gt; struct { // 定义结构体, 结构体可以认为是自定义的数据类型 &lt;attribute name&gt; &lt;type&gt; // 定义结构体属性及其类型 &lt;attribute name&gt; &lt;type&gt; // 每个属性名唯一, 不能重复 ... } type Student struct { // 定义 Student 类型数据 name, city string // Student 类型有 name city 属性, 属性值为 string age int // Student 类型有 age 属性, 属性类型为 int } var kertory Student // 初始化 Student 类型变量 kertory kertory.name = \\"kertory\\" // 使用 . 赋值 kertory.age = 18 facsert := Student{ // 初始化 Student 类型变量 facsert name: \\"facsert\\", city: \\"shanghai\\", } Printf(\\"%#v\\\\n\\", kertory) Printf(\\"%#v\\\\n\\", facsert) &gt; main.Student{name:\\"kertory\\", city:\\"\\", age:18} // 未初始化的属性使用类型的零值 &gt; main.Student{name:\\"facsert\\", city:\\"shanghai\\", age:0}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2023-04-19T19:26:24.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go 结构体\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-19T19:26:24.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"Struct","slug":"struct","link":"#struct","children":[{"level":3,"title":"struct 初始化","slug":"struct-初始化","link":"#struct-初始化","children":[]},{"level":3,"title":"struct 方法","slug":"struct-方法","link":"#struct-方法","children":[]},{"level":3,"title":"struct 属性修改","slug":"struct-属性修改","link":"#struct-属性修改","children":[]},{"level":3,"title":"struct 转 json","slug":"struct-转-json","link":"#struct-转-json","children":[]}]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":1.62,"words":485},"filePathRelative":"Go/tutorial/go-6-struct.md","localizedDate":"April 19, 2023","excerpt":"<h2> Struct</h2>\\n<h3> struct 初始化</h3>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code> <span class=\\"token keyword\\">type</span> <span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">struct</span> name<span class=\\"token operator\\">&gt;</span> <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>                     <span class=\\"token comment\\">// 定义结构体, 结构体可以认为是自定义的数据类型</span>\\n   <span class=\\"token operator\\">&lt;</span>attribute name<span class=\\"token operator\\">&gt;</span>  <span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">type</span><span class=\\"token operator\\">&gt;</span>                      <span class=\\"token comment\\">// 定义结构体属性及其类型</span>\\n   <span class=\\"token operator\\">&lt;</span>attribute name<span class=\\"token operator\\">&gt;</span>  <span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">type</span><span class=\\"token operator\\">&gt;</span>                      <span class=\\"token comment\\">// 每个属性名唯一, 不能重复</span>\\n   <span class=\\"token operator\\">...</span>\\n <span class=\\"token punctuation\\">}</span>\\n\\n <span class=\\"token keyword\\">type</span> Student <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>                           <span class=\\"token comment\\">// 定义 Student 类型数据</span>\\n   name<span class=\\"token punctuation\\">,</span> city  <span class=\\"token builtin\\">string</span>                            <span class=\\"token comment\\">// Student 类型有 name city 属性, 属性值为 string</span>\\n   age <span class=\\"token builtin\\">int</span>                                       <span class=\\"token comment\\">// Student 类型有 age 属性, 属性类型为 int</span>\\n <span class=\\"token punctuation\\">}</span>\\n\\n <span class=\\"token keyword\\">var</span> kertory Student                             <span class=\\"token comment\\">// 初始化 Student 类型变量 kertory</span>\\n kertory<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"kertory\\"</span>                        <span class=\\"token comment\\">// 使用 . 赋值</span>\\n kertory<span class=\\"token punctuation\\">.</span>age <span class=\\"token operator\\">=</span> <span class=\\"token number\\">18</span>\\n\\n facsert <span class=\\"token operator\\">:=</span> Student<span class=\\"token punctuation\\">{</span>                             <span class=\\"token comment\\">// 初始化 Student 类型变量 facsert</span>\\n   name<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"facsert\\"</span><span class=\\"token punctuation\\">,</span>\\n   city<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"shanghai\\"</span><span class=\\"token punctuation\\">,</span>\\n <span class=\\"token punctuation\\">}</span>\\n\\n <span class=\\"token function\\">Printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%#v\\\\n\\"</span><span class=\\"token punctuation\\">,</span> kertory<span class=\\"token punctuation\\">)</span>\\n <span class=\\"token function\\">Printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%#v\\\\n\\"</span><span class=\\"token punctuation\\">,</span> facsert<span class=\\"token punctuation\\">)</span>\\n\\n <span class=\\"token operator\\">&gt;</span> main<span class=\\"token punctuation\\">.</span>Student<span class=\\"token punctuation\\">{</span>name<span class=\\"token punctuation\\">:</span><span class=\\"token string\\">\\"kertory\\"</span><span class=\\"token punctuation\\">,</span> city<span class=\\"token punctuation\\">:</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">18</span><span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// 未初始化的属性使用类型的零值 </span>\\n <span class=\\"token operator\\">&gt;</span> main<span class=\\"token punctuation\\">.</span>Student<span class=\\"token punctuation\\">{</span>name<span class=\\"token punctuation\\">:</span><span class=\\"token string\\">\\"facsert\\"</span><span class=\\"token punctuation\\">,</span> city<span class=\\"token punctuation\\">:</span><span class=\\"token string\\">\\"shanghai\\"</span><span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
