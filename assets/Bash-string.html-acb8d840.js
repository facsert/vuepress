import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,f as e}from"./app-8da2a3ac.js";const t={},l=e(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>Bash 所有代码除关键字外默认为字符串</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token assign-left variable">command</span><span class="token operator">=</span><span class="token string">&quot;date&quot;</span>
$ <span class="token variable">$command</span>                                       <span class="token comment"># 取 command 变量值 &quot;date&quot;, &quot;date&quot; 作为命令执行</span>
<span class="token operator">&gt;</span> Mon Jun <span class="token number">12</span> <span class="token number">10</span>:07:40 CST <span class="token number">2023</span>                   <span class="token comment"># 执行 date, 打印日期</span>

$ <span class="token builtin class-name">echo</span> <span class="token function">date</span>                                      <span class="token comment"># date 被当作字符串, 作为 echo 的参数</span>
<span class="token operator">&gt;</span> <span class="token function">date</span>                                            

$ <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span>&quot;date&quot;<span class="token variable">)</span></span>                                 <span class="token comment"># 执行 &quot;date&quot;, 返回值作为 echo 的参数</span>
<span class="token operator">&gt;</span> Mon Jun <span class="token number">12</span> <span class="token number">10</span>:23:46 CST <span class="token number">2023</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bash 默认第一个字符为指令, 后续值为字符串作为指令的参数</p><h3 id="长度" tabindex="-1"><a class="header-anchor" href="#长度" aria-hidden="true">#</a> 长度</h3><p><code>\${#s}</code> 返回字符串的长度</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">&quot;123 456&quot;</span><span class="token punctuation">;</span> <span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">&quot;456 123&quot;</span>                       <span class="token comment"># 赋值</span>
$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;s:<span class="token variable">\${s}</span>  length: <span class="token variable">\${<span class="token operator">#</span>s}</span>&quot;</span>                   <span class="token comment"># 获取长度</span>
<span class="token operator">&gt;</span> s:456 <span class="token number">123</span>  length: <span class="token number">7</span>                           <span class="token comment"># 打印</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子字符串" tabindex="-1"><a class="header-anchor" href="#子字符串" aria-hidden="true">#</a> 子字符串</h3><p><code>\${s:start:length}</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">&quot;01234&quot;</span>
$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${s<span class="token operator">:</span>0<span class="token operator">:</span>3}</span>&quot;</span>                                <span class="token comment"># 从序号 0 开始, 获取 3 个长度</span>
<span class="token operator">&gt;</span> 012                                            <span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除和替换" tabindex="-1"><a class="header-anchor" href="#删除和替换" aria-hidden="true">#</a> 删除和替换</h2><p>字符串通过 <code>#(开头开始匹配) %(结尾开始匹配)</code> 完成删除或替换操作<br> 删除: <code>\${variable#pattern} \${variable##pattern} \${variable%pattern} \${variable%%pattern}</code><br> 替换: <code>\${variable/pattern/string} \${variable//pattern/string}</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token assign-left variable">date</span><span class="token operator">=</span><span class="token string">&quot;2023-07-31&quot;</span>
 
 $ <span class="token builtin class-name">echo</span> <span class="token variable">\${date<span class="token operator">#</span>*-}</span> <span class="token variable">\${date<span class="token operator">##</span>*-}</span>                   <span class="token comment"># # 从开头开始匹配, 只匹配最短内容 ## 贪婪匹配</span>
 <span class="token operator">&gt;</span> 07-31 <span class="token number">31</span>
 $ <span class="token builtin class-name">echo</span> <span class="token variable">\${date<span class="token operator">%</span>-*}</span> <span class="token variable">\${date<span class="token operator">%%</span>-*}</span>                   <span class="token comment"># % 从结尾开始匹配, 只匹配最短内容 %% 贪婪匹配</span>
 <span class="token operator">&gt;</span> <span class="token number">2023</span>-07 <span class="token number">2023</span>


 $ <span class="token builtin class-name">echo</span> <span class="token variable">\${date<span class="token operator">/</span>-<span class="token operator">/</span>=}</span>                              <span class="token comment"># 只替换一次 </span>
 <span class="token operator">&gt;</span> <span class="token assign-left variable">2024</span><span class="token operator">=</span>07-31
 $ <span class="token builtin class-name">echo</span> <span class="token variable">\${date<span class="token operator">/</span><span class="token operator">/</span>-<span class="token operator">/</span>=}</span>                             <span class="token comment"># 全替换</span>
 <span class="token operator">&gt;</span> <span class="token assign-left variable">2023</span><span class="token operator">=</span>07<span class="token operator">=</span>01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="大小写" tabindex="-1"><a class="header-anchor" href="#大小写" aria-hidden="true">#</a> 大小写</h2><p><code>\${variable^^}</code> 字母全替换为大写<br><code>\${variable,,}</code> 字母全替换为小写</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> $ <span class="token assign-left variable">var</span><span class="token operator">=</span><span class="token string">&quot;ABC123xyz&quot;</span>
 $ <span class="token builtin class-name">echo</span> <span class="token variable">\${var<span class="token operator">^^</span>}</span>
 <span class="token operator">&gt;</span> ABC123XYZ

 $ <span class="token builtin class-name">echo</span> <span class="token variable">\${var<span class="token operator">,,</span>}</span>
 <span class="token operator">&gt;</span> abc123xyz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[l];function p(c,i){return a(),n("div",null,o)}const v=s(t,[["render",p],["__file","Bash-string.html.vue"]]);export{v as default};
