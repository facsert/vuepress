const n=JSON.parse('{"key":"v-7316ef38","path":"/Go/tutorial/go-7-interface.html","title":"Go 接口","lang":"en-US","frontmatter":{"title":"Go 接口","description":"引申 举办一个活动, 参加的人必须是能唱歌和玩游戏, 所以不管男女老幼, 只要能唱歌和玩游戏就应该都能参加 对于这个活动, 强调的是能唱歌能玩游戏这两种行为, 不关心其余特质和行为 用 Go 实现的效果 type People struct { name string } // 定义 People 结构体 func (p people) sing() { ... } // 定义结构体方法 sing func (p people) play() { ... } // 定义结构体方法 play func activate(singer s, player p) { // 定义函数, 参数为 singer 和 player 类型 s.sing() p.play() }","date":"2022-10-20T19:23:13.000Z","category":["Go 教程"],"tag":["Go"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/Go/tutorial/go-7-interface.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"Go 接口"}],["meta",{"property":"og:description","content":"引申 举办一个活动, 参加的人必须是能唱歌和玩游戏, 所以不管男女老幼, 只要能唱歌和玩游戏就应该都能参加 对于这个活动, 强调的是能唱歌能玩游戏这两种行为, 不关心其余特质和行为 用 Go 实现的效果 type People struct { name string } // 定义 People 结构体 func (p people) sing() { ... } // 定义结构体方法 sing func (p people) play() { ... } // 定义结构体方法 play func activate(singer s, player p) { // 定义函数, 参数为 singer 和 player 类型 s.sing() p.play() }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2022-10-20T19:23:13.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go 接口\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-20T19:23:13.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"引申","slug":"引申","link":"#引申","children":[]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":2.24,"words":672},"filePathRelative":"Go/tutorial/go-7-interface.md","localizedDate":"October 20, 2022","excerpt":"<h2> 引申</h2>\\n<p>举办一个活动, 参加的人必须是能唱歌和玩游戏, 所以不管男女老幼, 只要能唱歌和玩游戏就应该都能参加<br>\\n对于这个活动, 强调的是能唱歌能玩游戏这两种行为, 不关心其余特质和行为</p>\\n<p>用 Go 实现的效果</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">type</span> People <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span> name <span class=\\"token builtin\\">string</span> <span class=\\"token punctuation\\">}</span>               <span class=\\"token comment\\">// 定义 People 结构体</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>p people<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">sing</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">...</span> <span class=\\"token punctuation\\">}</span>                   <span class=\\"token comment\\">// 定义结构体方法 sing</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>p people<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">play</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">...</span> <span class=\\"token punctuation\\">}</span>                   <span class=\\"token comment\\">// 定义结构体方法 play</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">activate</span><span class=\\"token punctuation\\">(</span>singer s<span class=\\"token punctuation\\">,</span> player p<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>              <span class=\\"token comment\\">// 定义函数, 参数为 singer 和 player 类型</span>\\n    s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sing</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>                                     \\n    p<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">play</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>                                     \\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
