const n=JSON.parse('{"key":"v-245aeb94","path":"/C/C-1-interget.html","title":"C 整形","lang":"en-US","frontmatter":{"title":"C 整形","description":"整形 int main(void) { short int short_int = 1; int normal_int = 2; long int long_int = 3; printf(\\"size of short int : %zu\\\\n\\", sizeof(short_int)); printf(\\"size of normal int: %zu\\\\n\\", sizeof(normal_int)); printf(\\"size of long int : %zu\\\\n\\", sizeof(long_int)); } size of short int : 2 size of normal int: 4 size of long int : 8","date":"2022-05-27T20:20:45.000Z","category":["C 教程"],"tag":["C"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/C/C-1-interget.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"C 整形"}],["meta",{"property":"og:description","content":"整形 int main(void) { short int short_int = 1; int normal_int = 2; long int long_int = 3; printf(\\"size of short int : %zu\\\\n\\", sizeof(short_int)); printf(\\"size of normal int: %zu\\\\n\\", sizeof(normal_int)); printf(\\"size of long int : %zu\\\\n\\", sizeof(long_int)); } size of short int : 2 size of normal int: 4 size of long int : 8"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"C"}],["meta",{"property":"article:published_time","content":"2022-05-27T20:20:45.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C 整形\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-27T20:20:45.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"整形","slug":"整形","link":"#整形","children":[{"level":3,"title":"最值","slug":"最值","link":"#最值","children":[]}]},{"level":2,"title":"进制","slug":"进制","link":"#进制","children":[]},{"level":2,"title":"浮点数","slug":"浮点数","link":"#浮点数","children":[]},{"level":2,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[{"level":3,"title":"隐式转换","slug":"隐式转换","link":"#隐式转换","children":[]},{"level":3,"title":"显式转换","slug":"显式转换","link":"#显式转换","children":[]}]},{"level":2,"title":"布尔值","slug":"布尔值","link":"#布尔值","children":[]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":3.94,"words":1183},"filePathRelative":"C/C-1-interget.md","localizedDate":"May 27, 2022","excerpt":"<h2> 整形</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">short</span> <span class=\\"token keyword\\">int</span> short_int <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">int</span> normal_int <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">long</span> <span class=\\"token keyword\\">int</span> long_int <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n     \\n    <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"size of short int : %zu\\\\n\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>short_int<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"size of normal int: %zu\\\\n\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>normal_int<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"size of long int  : %zu\\\\n\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>long_int<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nsize of <span class=\\"token keyword\\">short</span> <span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">2</span>\\nsize of normal <span class=\\"token keyword\\">int</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">4</span>\\nsize of <span class=\\"token keyword\\">long</span> <span class=\\"token keyword\\">int</span>  <span class=\\"token operator\\">:</span> <span class=\\"token number\\">8</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
