const e=JSON.parse(`{"key":"v-8d9a4808","path":"/Code/code-1-word.html","title":"代码格式","lang":"en-US","frontmatter":{"title":"代码格式","description":"风格 命名 注释 风格 空格 对齐 换行 一致性 使用空格, 对齐, 换行的规则形成代码风格 空格 使用空格使运算语句更清晰, 分隔多个数据, 参数 4 + 2 # 6 二元运算 2 ** 3 # 8 指数运算 love = True # 赋值 love is True # True 逻辑判断 not love # False 非运算 love &gt; (not love) # True 比较运算 love and love # True 逻辑运算 (1, 2, 3) # 数据之间空格区分 {'name': 'petter'} # 键值对区分 key value func(msg='hello', name='petter') # 参数之间空格区分","date":"2022-07-13T21:27:49.000Z","categorie":["代码艺术"],"tag":["Code"],"head":[["meta",{"property":"og:url","content":"https://facsert.github.io/Code/code-1-word.html"}],["meta",{"property":"og:site_name","content":"Facsert"}],["meta",{"property":"og:title","content":"代码格式"}],["meta",{"property":"og:description","content":"风格 命名 注释 风格 空格 对齐 换行 一致性 使用空格, 对齐, 换行的规则形成代码风格 空格 使用空格使运算语句更清晰, 分隔多个数据, 参数 4 + 2 # 6 二元运算 2 ** 3 # 8 指数运算 love = True # 赋值 love is True # True 逻辑判断 not love # False 非运算 love &gt; (not love) # True 比较运算 love and love # True 逻辑运算 (1, 2, 3) # 数据之间空格区分 {'name': 'petter'} # 键值对区分 key value func(msg='hello', name='petter') # 参数之间空格区分"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-09-03T14:38:24.000Z"}],["meta",{"property":"article:author","content":"Facsert"}],["meta",{"property":"article:tag","content":"Code"}],["meta",{"property":"article:published_time","content":"2022-07-13T21:27:49.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-03T14:38:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码格式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-13T21:27:49.000Z\\",\\"dateModified\\":\\"2023-09-03T14:38:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Facsert\\",\\"url\\":\\"https://facsert.github.io\\",\\"email\\":\\"facsert@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"风格","slug":"风格","link":"#风格","children":[{"level":3,"title":"空格","slug":"空格","link":"#空格","children":[]},{"level":3,"title":"对齐","slug":"对齐","link":"#对齐","children":[]},{"level":3,"title":"空行","slug":"空行","link":"#空行","children":[]},{"level":3,"title":"一致性","slug":"一致性","link":"#一致性","children":[]}]},{"level":2,"title":"命名","slug":"命名","link":"#命名","children":[{"level":3,"title":"准确 突出重点","slug":"准确-突出重点","link":"#准确-突出重点","children":[]},{"level":3,"title":"长度","slug":"长度","link":"#长度","children":[]},{"level":3,"title":"一致性","slug":"一致性-1","link":"#一致性-1","children":[]}]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[{"level":3,"title":"代码比注释更重要","slug":"代码比注释更重要","link":"#代码比注释更重要","children":[]},{"level":3,"title":"强调使用规范和缺陷","slug":"强调使用规范和缺陷","link":"#强调使用规范和缺陷","children":[]}]},{"level":2,"title":"常用动词","slug":"常用动词","link":"#常用动词","children":[]},{"level":2,"title":"单词缩写","slug":"单词缩写","link":"#单词缩写","children":[]}],"git":{"createdTime":1693751904000,"updatedTime":1693751904000,"contributors":[{"name":"facser","email":"facsert@outlook.com","commits":1}]},"readingTime":{"minutes":4.78,"words":1434},"filePathRelative":"Code/code-1-word.md","localizedDate":"July 13, 2022","excerpt":"<ul>\\n<li>风格</li>\\n<li>命名</li>\\n<li>注释</li>\\n</ul>\\n<h2> 风格</h2>\\n<ul>\\n<li>空格</li>\\n<li>对齐</li>\\n<li>换行</li>\\n<li>一致性</li>\\n</ul>\\n<p>使用空格, 对齐, 换行的规则形成代码风格</p>\\n<h3> 空格</h3>\\n<p>使用空格使运算语句更清晰, 分隔多个数据, 参数</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code> <span class=\\"token number\\">4</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">2</span>                                           <span class=\\"token comment\\"># 6 二元运算</span>\\n <span class=\\"token number\\">2</span> <span class=\\"token operator\\">**</span> <span class=\\"token number\\">3</span>                                          <span class=\\"token comment\\"># 8 指数运算</span>\\n \\n love <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">True</span>                                     <span class=\\"token comment\\"># 赋值</span>\\n love <span class=\\"token keyword\\">is</span> <span class=\\"token boolean\\">True</span>                                    <span class=\\"token comment\\"># True 逻辑判断</span>\\n <span class=\\"token keyword\\">not</span> love                                        <span class=\\"token comment\\"># False 非运算</span>\\n love <span class=\\"token operator\\">&gt;</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">not</span> love<span class=\\"token punctuation\\">)</span>                               <span class=\\"token comment\\"># True 比较运算</span>\\n love <span class=\\"token keyword\\">and</span> love                                   <span class=\\"token comment\\"># True 逻辑运算</span>\\n\\n <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span>                                       <span class=\\"token comment\\"># 数据之间空格区分</span>\\n <span class=\\"token punctuation\\">{</span><span class=\\"token string\\">'name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'petter'</span><span class=\\"token punctuation\\">}</span>                              <span class=\\"token comment\\"># 键值对区分 key value</span>\\n\\n func<span class=\\"token punctuation\\">(</span>msg<span class=\\"token operator\\">=</span><span class=\\"token string\\">'hello'</span><span class=\\"token punctuation\\">,</span> name<span class=\\"token operator\\">=</span><span class=\\"token string\\">'petter'</span><span class=\\"token punctuation\\">)</span>                <span class=\\"token comment\\"># 参数之间空格区分</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
